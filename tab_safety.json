[
  {
    "id": "9af8d2728e09c71f",
    "type": "server-state-changed",
    "z": "b0ce83b4c7194f6d",
    "name": "Humidor temp change",
    "server": "11e9f35b.61816d",
    "version": 6,
    "outputs": 1,
    "exposeAsEntityConfig": "",
    "entities": {
      "entity": [
        "sensor.hygrometer_humidor_temperature"
      ],
      "substring": [],
      "regex": []
    },
    "outputInitially": false,
    "stateType": "str",
    "ifState": "",
    "ifStateType": "str",
    "ifStateOperator": "is",
    "outputOnlyOnStateChange": true,
    "for": "0",
    "forType": "num",
    "forUnits": "minutes",
    "ignorePrevStateNull": true,
    "ignorePrevStateUnknown": true,
    "ignorePrevStateUnavailable": true,
    "ignoreCurrentStateUnknown": true,
    "ignoreCurrentStateUnavailable": true,
    "outputProperties": [],
    "x": 220,
    "y": 140,
    "wires": [
      [
        "08dd4f7a91aeb61f"
      ]
    ]
  },
  {
    "id": "08dd4f7a91aeb61f",
    "type": "function",
    "z": "b0ce83b4c7194f6d",
    "name": "Humidor evaluation",
    "func": "const ha = global.get('homeassistant');\nif (!ha || !ha.homeAssistant || !ha.homeAssistant.states) {\n    return null;\n}\nconst states = ha.homeAssistant.states;\nconst holiday = (states['binary_sensor.holiday_mode_active']?.state || '').toLowerCase() === 'on';\nif (holiday) {\n    context.set('highSince', 0);\n    context.set('lowSince', 0);\n    return null;\n}\nconst temp = Number(msg.payload);\nif (Number.isNaN(temp)) {\n    return null;\n}\nconst plugOn = (states['switch.plug_humidor']?.state || '').toLowerCase() === 'on';\nconst now = Date.now();\nlet highSince = context.get('highSince') || 0;\nlet lowSince = context.get('lowSince') || 0;\nif (temp > 74 && !plugOn) {\n    if (!highSince) highSince = now;\n} else {\n    highSince = 0;\n}\nif (temp < 70 && plugOn) {\n    if (!lowSince) lowSince = now;\n} else {\n    lowSince = 0;\n}\ncontext.set('highSince', highSince);\ncontext.set('lowSince', lowSince);\nlet action = null;\nif (highSince && temp > 74 && !plugOn && (now - highSince) >= 120000) {\n    action = 'cool_on';\n    context.set('highSince', now);\n}\nif (lowSince && temp < 70 && plugOn && (now - lowSince) >= 60000) {\n    action = 'cool_off';\n    context.set('lowSince', now);\n}\nif (!action) {\n    return null;\n}\nconst humidity = states['sensor.hygrometer_humidor_humidity']?.state || '?';\nmsg.action = action;\nmsg.scene_entity = action === 'cool_on' ? 'scene.climate_humidor_cooling_on' : 'scene.climate_humidor_cooling_off';\nmsg.log_message = `${action === 'cool_on' ? 'Cooling ON' : 'Cooling OFF'} - Temperature: ${temp.toFixed(1)}\u00b0F - Humidity: ${humidity}%`;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 500,
    "y": 140,
    "wires": [
      [
        "cdd7364d4067dd4c"
      ]
    ]
  },
  {
    "id": "cdd7364d4067dd4c",
    "type": "switch",
    "z": "b0ce83b4c7194f6d",
    "name": "Cooling action?",
    "property": "action",
    "propertyType": "msg",
    "rules": [
      {
        "t": "eq",
        "v": "cool_on",
        "vt": "str"
      },
      {
        "t": "eq",
        "v": "cool_off",
        "vt": "str"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 760,
    "y": 140,
    "wires": [
      [
        "841c5c17ee1a3218"
      ],
      [
        "841c5c17ee1a3218"
      ]
    ]
  },
  {
    "id": "841c5c17ee1a3218",
    "type": "api-call-service",
    "z": "b0ce83b4c7194f6d",
    "name": "Apply humidor scene",
    "server": "11e9f35b.61816d",
    "version": 7,
    "debugenabled": false,
    "action": "scene.turn_on",
    "floorId": [],
    "areaId": [],
    "deviceId": [],
    "entityId": [
      "{{scene_entity}}"
    ],
    "labelId": [],
    "data": "{}",
    "dataType": "json",
    "mergeContext": "",
    "mustacheAltTags": false,
    "outputProperties": [],
    "queue": "none",
    "blockInputOverrides": false,
    "domain": "scene",
    "service": "turn_on",
    "x": 1000,
    "y": 120,
    "wires": [
      [
        "9337a1b9f6f7dd4f"
      ]
    ]
  },
  {
    "id": "9337a1b9f6f7dd4f",
    "type": "api-call-service",
    "z": "b0ce83b4c7194f6d",
    "name": "Log humidor action",
    "server": "11e9f35b.61816d",
    "version": 7,
    "debugenabled": false,
    "action": "logbook.log",
    "data": "{\"entity_id\":\"automation.humidor_plug_temp_control\",\"name\":\"Humidor Control\",\"message\":\"{{log_message}}\"}",
    "dataType": "json",
    "mergeContext": "",
    "mustacheAltTags": false,
    "outputProperties": [],
    "queue": "none",
    "blockInputOverrides": false,
    "domain": "logbook",
    "service": "log",
    "x": 1220,
    "y": 120,
    "wires": [
      []
    ]
  },
  {
    "id": "f7882aff5c51e24a",
    "type": "inject",
    "z": "b0ce83b4c7194f6d",
    "name": "Nightly burner shutoff",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "",
    "crontab": "0 23 * * *",
    "once": false,
    "onceDelay": 0,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 220,
    "y": 320,
    "wires": [
      [
        "055e23be6c350b32"
      ]
    ]
  },
  {
    "id": "055e23be6c350b32",
    "type": "api-current-state",
    "z": "b0ce83b4c7194f6d",
    "name": "Holiday mode off? (burner)",
    "server": "11e9f35b.61816d",
    "version": 3,
    "outputs": 1,
    "halt_if": "on",
    "halt_if_type": "str",
    "halt_if_compare": "is",
    "entity_id": "binary_sensor.holiday_mode_active",
    "state_type": "str",
    "blockInputOverrides": false,
    "outputProperties": [],
    "for": "0",
    "forType": "num",
    "forUnits": "minutes",
    "override_topic": false,
    "state_location": "payload",
    "override_payload": "msg",
    "entity_location": "holiday_entity",
    "override_data": "msg",
    "x": 520,
    "y": 320,
    "wires": [
      [
        "53b5648669e6caab"
      ]
    ]
  },
  {
    "id": "53b5648669e6caab",
    "type": "api-call-service",
    "z": "b0ce83b4c7194f6d",
    "name": "Turn burners off",
    "server": "11e9f35b.61816d",
    "version": 7,
    "debugenabled": false,
    "action": "scene.turn_on",
    "floorId": [],
    "areaId": [],
    "deviceId": [],
    "entityId": [
      "scene.safety_burner_plugs_off"
    ],
    "labelId": [],
    "data": "{}",
    "dataType": "json",
    "mergeContext": "",
    "mustacheAltTags": false,
    "outputProperties": [],
    "queue": "none",
    "blockInputOverrides": false,
    "domain": "scene",
    "service": "turn_on",
    "x": 780,
    "y": 320,
    "wires": [
      [
        "49ecb4966da9542a"
      ]
    ]
  },
  {
    "id": "49ecb4966da9542a",
    "type": "api-call-service",
    "z": "b0ce83b4c7194f6d",
    "name": "Notify burner shutoff",
    "server": "11e9f35b.61816d",
    "version": 7,
    "debugenabled": false,
    "action": "persistent_notification.create",
    "data": "{\"title\":\"Safety: Burner Plugs\",\"message\":\"All burner plugs turned off at 11 PM.\",\"notification_id\":\"nightly_burner_shutoff\"}",
    "dataType": "json",
    "mergeContext": "",
    "mustacheAltTags": false,
    "outputProperties": [],
    "queue": "none",
    "blockInputOverrides": false,
    "domain": "persistent_notification",
    "service": "create",
    "x": 1040,
    "y": 320,
    "wires": [
      [
        "36dfb59682ef5f2b"
      ]
    ]
  },
  {
    "id": "36dfb59682ef5f2b",
    "type": "api-call-service",
    "z": "b0ce83b4c7194f6d",
    "name": "Log burner shutoff",
    "server": "11e9f35b.61816d",
    "version": 7,
    "debugenabled": false,
    "action": "logbook.log",
    "data": "{\"entity_id\":\"automation.burner_plugs_off_2300\",\"name\":\"Safety Automation\",\"message\":\"Nightly burner plug shutoff completed\"}",
    "dataType": "json",
    "mergeContext": "",
    "mustacheAltTags": false,
    "outputProperties": [],
    "queue": "none",
    "blockInputOverrides": false,
    "domain": "logbook",
    "service": "log",
    "x": 1300,
    "y": 320,
    "wires": [
      []
    ]
  },
  {
    "id": "2f5ebc7537fd1211",
    "type": "server-events",
    "z": "b0ce83b4c7194f6d",
    "name": "homeassistant_start",
    "server": "11e9f35b.61816d",
    "version": 3,
    "exposeAsEntityConfig": "",
    "eventType": "homeassistant_start",
    "waitForRunning": false,
    "x": 220,
    "y": 500,
    "wires": [
      [
        "df11b3a598ab5892"
      ]
    ]
  },
  {
    "id": "848cd18610cf1799",
    "type": "inject",
    "z": "b0ce83b4c7194f6d",
    "name": "Manual warmup",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "",
    "crontab": "",
    "once": false,
    "onceDelay": 0,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 220,
    "y": 560,
    "wires": [
      [
        "df11b3a598ab5892"
      ]
    ]
  },
  {
    "id": "df11b3a598ab5892",
    "type": "function",
    "z": "b0ce83b4c7194f6d",
    "name": "Build warmup queue",
    "func": "msg.cameras = [\n    'camera.backyard_camera_fluent',\n    'camera.argus_pt_ultra_fluent',\n    'camera.garage_cam_fluent'\n];\nmsg.warmup_delay_sec = 5;\nmsg.sensors = [\n    'binary_sensor.backyard_camera_motion',\n    'binary_sensor.argus_pt_ultra_motion',\n    'binary_sensor.garage_cam_motion'\n];\nnode.status({ fill: 'blue', shape: 'ring', text: `warming ${msg.cameras.length} cams` });\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 500,
    "y": 520,
    "wires": [
      [
        "ef908728ad76aed7",
        "535e4e968f9d08b8"
      ]
    ]
  },
  {
    "id": "ef908728ad76aed7",
    "type": "split",
    "z": "b0ce83b4c7194f6d",
    "name": "Each camera",
    "splt": "\\n",
    "spltType": "str",
    "arraySplt": "1",
    "arraySpltType": "len",
    "stream": false,
    "addname": "",
    "property": "cameras",
    "x": 720,
    "y": 480,
    "wires": [
      [
        "34dbdac7dcdc6dda"
      ]
    ]
  },
  {
    "id": "34dbdac7dcdc6dda",
    "type": "function",
    "z": "b0ce83b4c7194f6d",
    "name": "Camera context",
    "func": "const entity = msg.payload;\nmsg.camera_entity = entity;\nmsg.camera_slug = entity.split('.').pop();\nmsg.payload = null;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 920,
    "y": 480,
    "wires": [
      [
        "8ae974652288aa9e"
      ]
    ]
  },
  {
    "id": "8ae974652288aa9e",
    "type": "delay",
    "z": "b0ce83b4c7194f6d",
    "name": "Space snapshots",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "0",
    "randomLast": "0",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": true,
    "outputs": 1,
    "x": 1140,
    "y": 480,
    "wires": [
      [
        "6749919cacf2c7f8"
      ]
    ]
  },
  {
    "id": "6749919cacf2c7f8",
    "type": "api-call-service",
    "z": "b0ce83b4c7194f6d",
    "name": "Prime snapshot",
    "server": "11e9f35b.61816d",
    "version": 7,
    "debugenabled": false,
    "action": "camera.snapshot",
    "floorId": [],
    "areaId": [],
    "deviceId": [],
    "entityId": [
      "{{camera_entity}}"
    ],
    "labelId": [],
    "data": "{\"filename\":\"/config/www/reolink_warmup/{{camera_slug}}.jpg\"}",
    "dataType": "json",
    "mergeContext": "",
    "mustacheAltTags": false,
    "outputProperties": [],
    "queue": "none",
    "blockInputOverrides": false,
    "domain": "camera",
    "service": "snapshot",
    "x": 1360,
    "y": 480,
    "wires": [
      []
    ]
  },
  {
    "id": "535e4e968f9d08b8",
    "type": "delay",
    "z": "b0ce83b4c7194f6d",
    "name": "Settle 25s",
    "pauseType": "delay",
    "timeout": "25",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "0",
    "randomLast": "0",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "outputs": 1,
    "x": 720,
    "y": 600,
    "wires": [
      [
        "ea757bdd858d9b18"
      ]
    ]
  },
  {
    "id": "ea757bdd858d9b18",
    "type": "api-call-service",
    "z": "b0ce83b4c7194f6d",
    "name": "Refresh motion sensors",
    "server": "11e9f35b.61816d",
    "version": 7,
    "debugenabled": false,
    "action": "homeassistant.update_entity",
    "floorId": [],
    "areaId": [],
    "deviceId": [],
    "entityId": [
      "binary_sensor.backyard_camera_motion",
      "binary_sensor.argus_pt_ultra_motion",
      "binary_sensor.garage_cam_motion"
    ],
    "labelId": [],
    "data": "{}",
    "dataType": "json",
    "mergeContext": "",
    "mustacheAltTags": false,
    "outputProperties": [],
    "queue": "none",
    "blockInputOverrides": false,
    "domain": "homeassistant",
    "service": "update_entity",
    "x": 980,
    "y": 600,
    "wires": [
      []
    ]
  }
]
