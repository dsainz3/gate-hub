title: F1 Race Center
views:
  - title: Race Weekend
    path: f1-race-weekend
    icon: mdi:flag-outline
    badges: []
    cards:
      - type: entities
        title: Quick Controls
        show_header_toggle: false
        entities:
          - entity: input_boolean.f1_automations_enabled
            name: Automations Enabled
          - entity: input_boolean.f1_race_mode
            name: Race Mode
          - entity: input_boolean.f1_test_mode
            name: Test Mode
          - entity: input_boolean.f1_use_manual_lights_out
            name: Manual Countdown Override
          - entity: input_number.f1_lights_out_manual_minutes
            name: Manual Countdown (min)
          - entity: input_number.f1_chequered_hold_minutes
            name: Chequered Hold (min)
          - type: call-service
            name: Lights Out Show
            icon: mdi:play-speed
            action_name: Run
            service: script.turn_on
            service_data:
              entity_id: script.f1_lights_out_sequence
          - type: call-service
            name: Chequered Flag Show
            icon: mdi:flag-checkered
            action_name: Run
            service: script.turn_on
            service_data:
              entity_id: script.f1_chequered_flag_show
          - type: call-service
            name: Reset Lights
            icon: mdi:restart
            action_name: Run
            service: script.turn_on
            service_data:
              entity_id: script.f1_stop_all_shows

      - type: markdown
        title: Race Countdown
        content: |
          {% set invalid = ['unknown', 'unavailable', '', None] %}
          {% set minutes = states('sensor.f1_lights_out_minutes_effective') | int(9999) %}
          {% set phase = states('sensor.f1_race_phase_label') %}
          {% set race = states('sensor.f1_next_race_name') %}
          {% set location = states('sensor.f1_next_race_location') %}
          {% set local_ts = states('sensor.f1_lights_out_local') %}
          {% set track_status = states('sensor.f1_track_status_label') %}
          {% if local_ts not in invalid %}
            {% set ts = as_timestamp(local_ts, default=None) %}
            {% if ts is not none %}
              {% set formatted = ts | timestamp_custom('%A, %B %-d · %-I:%M %p %Z', True) %}
            {% else %}
              {% set formatted = 'TBD' %}
            {% endif %}
          {% else %}
            {% set formatted = 'TBD' %}
          {% endif %}
          <div style="padding:16px;border-radius:18px;background:var(--card-background-color);box-shadow:var(--ha-card-box-shadow);">
            <h2 style="margin:0 0 8px 0;font-size:1.6rem;">{{ race }} ({{ location }})</h2>
            <p style="margin:4px 0;color:var(--secondary-text-color);">Lights out: {{ formatted }}</p>
            <p style="margin:16px 0 0 0;font-size:3rem;font-weight:700;">T-{{ minutes }} min</p>
            <p style="margin:4px 0 0 0;font-weight:600;color:var(--primary-text-color);">Phase: {{ phase }}</p>
            <p style="margin:4px 0 0 0;color:var(--secondary-text-color);">Track status: {{ track_status }}</p>
          </div>

      - type: horizontal-stack
        cards:
          - type: tile
            entity: sensor.f1_lights_out_minutes_effective
            name: Lights Out (min)
            state_content: state
          - type: tile
            entity: sensor.f1_track_status_label
            name: Track Status
          - type: tile
            entity: binary_sensor.f1_is_race_week
            name: Race Week
          - type: tile
            entity: binary_sensor.f1_is_pre_race_window
            name: Pre-Race Window
          - type: tile
            entity: binary_sensor.f1_is_race_live
            name: Live
          - type: tile
            entity: binary_sensor.f1_is_race_wrap
            name: Post Race

      - type: markdown
        title: Weekend Notes
        content: |
          {% set race = states('sensor.f1_next_race_name') %}
          {% set location = states('sensor.f1_next_race_location') %}
          {% set local_ts = states('sensor.f1_lights_out_local') %}
          {% set has_schedule = local_ts not in ['unknown', 'unavailable', '', None] %}
          <ul>
            <li><strong>Race:</strong> {{ race }} ({{ location }})</li>
            {% if has_schedule %}
              <li><strong>Lights out:</strong>
          {% set ts = as_timestamp(local_ts, default=None) %}
          {% if ts is not none %}
            {{ ts | timestamp_custom('%a %b %-d · %-I:%M %p %Z', True) }}
          {% else %}
            TBD
          {% endif %}
              </li>
            {% else %}
              <li><strong>Lights out:</strong> TBD – enable the F1 sensor integration for timetable data.</li>
            {% endif %}
            <li><strong>Countdown mode:</strong>
              {% if is_state('input_boolean.f1_use_manual_lights_out','on') %}
                Manual ({{ states('input_number.f1_lights_out_manual_minutes') | int(0) }} min)
              {% else %}
                Automatic
              {% endif %}
            </li>
          </ul>

      - type: markdown
        title: Standings Snapshot
        content: |
          F1 standings sensors are not currently enabled. Open <em>Settings → Devices & Services → F1 Sensor</em> and enable the driver & constructor standings to populate this section.

      - type: entities
        title: Race Telemetry
        entities:
          - entity: sensor.f1_lights_out_local
            name: Lights Out (Local)
          - entity: sensor.f1_lights_out_minutes_auto
            name: Auto Countdown (min)
          - entity: sensor.f1_race_phase_label
            name: Race Phase
          - entity: sensor.f1_track_status_label
            name: Track Status
          - entity: input_text.f1_last_flag_message
            name: Last Flag Message

      - type: markdown
        title: Automation States
        content: |-
          | Flag | Value |
          | --- | --- |
          | Automations enabled | {{ states('input_boolean.f1_automations_enabled') }} |
          | Race mode | {{ states('input_boolean.f1_race_mode') }} |
          | Test mode | {{ states('input_boolean.f1_test_mode') }} |
          | Manual countdown | {{ states('input_boolean.f1_use_manual_lights_out') }} |
          | Pre-race window | {{ states('binary_sensor.f1_is_pre_race_window') }} |
          | Race live | {{ states('binary_sensor.f1_is_race_live') }} |
          | Race wrap | {{ states('binary_sensor.f1_is_race_wrap') }} |
