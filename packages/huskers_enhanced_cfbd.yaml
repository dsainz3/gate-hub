# packages/huskers_enhanced_cfbd.yaml
# Comprehensive Nebraska football data from CollegeFootballData API (CFBD)

rest:
  # ===== EXISTING ENDPOINTS (enhanced) =====

  # Nebraska record (overall + conference)
  - resource_template: 'https://api.collegefootballdata.com/records?year={{ now().year }}&team=Nebraska'
    method: GET
    headers:
      Authorization: !secret cfbd_bearer
      Accept: application/json
    scan_interval: 600 # 10 min
    sensor:
      - name: huskers_records_raw
        unique_id: huskers_records_raw
        value_template: "{{ value | default('', true) }}"

  # Big Ten conference standings
  - resource_template: 'https://api.collegefootballdata.com/standings?year={{ now().year }}&conference=Big%20Ten'
    method: GET
    headers:
      Authorization: !secret cfbd_bearer
      Accept: application/json
    scan_interval: 900 # 15 min
    sensor:
      - name: b1g_standings_raw
        unique_id: b1g_standings_raw
        value_template: "{{ value | default('', true) }}"

  # Nebraska schedule (entire year)
  - resource_template: 'https://api.collegefootballdata.com/games?year={{ now().year }}&team=Nebraska'
    method: GET
    headers:
      Authorization: !secret cfbd_bearer
      Accept: application/json
    scan_interval: 1800 # 30 min
    sensor:
      - name: huskers_schedule_raw
        unique_id: huskers_schedule_raw
        value_template: "{{ value | default('', true) }}"

  # ===== NEW COMPREHENSIVE DATA ENDPOINTS =====

  # Current week games (for live scoring)
  # NOTE: Week calc is approximate; adjust if needed for week-0/bye logic.
  - resource_template: 'https://api.collegefootballdata.com/scoreboard?classification=fbs&week={{ ((now().timetuple().tm_yday - 244) // 7) + 1 }}&year={{ now().year }}'
    method: GET
    headers:
      Authorization: !secret cfbd_bearer
      Accept: application/json
    scan_interval: 300 # 5 min during season
    sensor:
      - name: cfb_scoreboard_raw
        unique_id: cfb_scoreboard_raw
        value_template: "{{ value | default('', true) }}"

  # Nebraska team stats (season)
  - resource_template: 'https://api.collegefootballdata.com/stats/season?year={{ now().year }}&team=Nebraska'
    method: GET
    headers:
      Authorization: !secret cfbd_bearer
      Accept: application/json
    scan_interval: 3600 # 60 min
    sensor:
      - name: huskers_season_stats_raw
        unique_id: huskers_season_stats_raw
        value_template: "{{ value | default('', true) }}"

  # Nebraska advanced stats
  - resource_template: 'https://api.collegefootballdata.com/stats/season/advanced?year={{ now().year }}&team=Nebraska'
    method: GET
    headers:
      Authorization: !secret cfbd_bearer
      Accept: application/json
    scan_interval: 3600 # 60 min
    sensor:
      - name: huskers_advanced_stats_raw
        unique_id: huskers_advanced_stats_raw
        value_template: "{{ value | default('', true) }}"

  # Nebraska roster
  - resource_template: 'https://api.collegefootballdata.com/roster?team=Nebraska&year={{ now().year }}'
    method: GET
    headers:
      Authorization: !secret cfbd_bearer
      Accept: application/json
    scan_interval: 86400 # Daily
    sensor:
      - name: huskers_roster_raw
        unique_id: huskers_roster_raw
        value_template: "{{ value | default('', true) }}"

  # Nebraska recruiting rankings
  - resource_template: 'https://api.collegefootballdata.com/recruiting/teams?team=Nebraska&year={{ now().year }}'
    method: GET
    headers:
      Authorization: !secret cfbd_bearer
      Accept: application/json
    scan_interval: 86400 # Daily
    sensor:
      - name: huskers_recruiting_raw
        unique_id: huskers_recruiting_raw
        value_template: "{{ value | default('', true) }}"

  # Team rankings (polls)
  - resource_template: 'https://api.collegefootballdata.com/rankings?year={{ now().year }}&week={{ ((now().timetuple().tm_yday - 244) // 7) + 1 }}&seasonType=regular'
    method: GET
    headers:
      Authorization: !secret cfbd_bearer
      Accept: application/json
    scan_interval: 3600 # 60 min
    sensor:
      - name: cfb_rankings_raw
        unique_id: cfb_rankings_raw
        value_template: "{{ value | default('', true) }}"

  # Betting lines for Nebraska games
  - resource_template: 'https://api.collegefootballdata.com/lines?year={{ now().year }}&team=Nebraska'
    method: GET
    headers:
      Authorization: !secret cfbd_bearer
      Accept: application/json
    scan_interval: 1800 # 30 min
    sensor:
      - name: huskers_betting_lines_raw
        unique_id: huskers_betting_lines_raw
        value_template: "{{ value | default('', true) }}"

  # Team talent ratings
  - resource_template: 'https://api.collegefootballdata.com/talent?year={{ now().year }}'
    method: GET
    headers:
      Authorization: !secret cfbd_bearer
      Accept: application/json
    scan_interval: 86400 # Daily
    sensor:
      - name: cfb_talent_raw
        unique_id: cfb_talent_raw
        value_template: "{{ value | default('', true) }}"

  # SP+ ratings
  - resource_template: 'https://api.collegefootballdata.com/ratings/sp?year={{ now().year }}'
    method: GET
    headers:
      Authorization: !secret cfbd_bearer
      Accept: application/json
    scan_interval: 86400 # Daily
    sensor:
      - name: cfb_sp_ratings_raw
        unique_id: cfb_sp_ratings_raw
        value_template: "{{ value | default('', true) }}"

  # ELO ratings
  - resource_template: 'https://api.collegefootballdata.com/ratings/elo?year={{ now().year }}'
    method: GET
    headers:
      Authorization: !secret cfbd_bearer
      Accept: application/json
    scan_interval: 86400 # Daily
    sensor:
      - name: cfb_elo_ratings_raw
        unique_id: cfb_elo_ratings_raw
        value_template: "{{ value | default('', true) }}"

  # FPI ratings
  - resource_template: 'https://api.collegefootballdata.com/ratings/fpi?year={{ now().year }}'
    method: GET
    headers:
      Authorization: !secret cfbd_bearer
      Accept: application/json
    scan_interval: 86400 # Daily
    sensor:
      - name: cfb_fpi_ratings_raw
        unique_id: cfb_fpi_ratings_raw
        value_template: "{{ value | default('', true) }}"

  # Game media info (TV/Radio)
  - resource_template: 'https://api.collegefootballdata.com/games/media?year={{ now().year }}&team=Nebraska'
    method: GET
    headers:
      Authorization: !secret cfbd_bearer
      Accept: application/json
    scan_interval: 3600 # 60 min
    sensor:
      - name: huskers_media_raw
        unique_id: huskers_media_raw
        value_template: "{{ value | default('', true) }}"

  # Nebraska player stats (key players)
  - resource_template: 'https://api.collegefootballdata.com/stats/player/season?year={{ now().year }}&team=Nebraska'
    method: GET
    headers:
      Authorization: !secret cfbd_bearer
      Accept: application/json
    scan_interval: 3600 # 60 min
    sensor:
      - name: huskers_player_stats_raw
        unique_id: huskers_player_stats_raw
        value_template: "{{ value | default('', true) }}"

template:
  - sensor:
      # ===== ENHANCED EXISTING SENSORS =====

      # Record (overall) - enhanced
      - name: huskers_record_overall
        unique_id: huskers_record_overall
        state: >-
          {% set raw = states('sensor.huskers_records_raw') %}
          {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
          {% set rec = (data[0].get('total', {}) if data else {}) %}
          {% set w = rec.get('wins') %}
          {% set l = rec.get('losses') %}
          {% set t = rec.get('ties', 0) %}
          {% if w is not none and l is not none %}
            {{ w }}-{{ l }}{{ '-' ~ t if t|int > 0 else '' }}
          {% else %}unknown{% endif %}
        attributes:
          wins: >-
            {% set raw = states('sensor.huskers_records_raw') %}
            {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {{ data[0].get('total', {}).get('wins', 0) if data else 0 }}
          losses: >-
            {% set raw = states('sensor.huskers_records_raw') %}
            {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {{ data[0].get('total', {}).get('losses', 0) if data else 0 }}
          percentage: >-
            {% set raw = states('sensor.huskers_records_raw') %}
            {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {% set rec = (data[0].get('total', {}) if data else {}) %}
            {% set w = rec.get('wins', 0) | float %}
            {% set l = rec.get('losses', 0) | float %}
            {% if (w + l) > 0 %}
              {{ "%.3f" | format(w / (w + l)) }}
            {% else %}0.000{% endif %}

      # Record (conference) - enhanced
      - name: huskers_record_conference
        unique_id: huskers_record_conference
        state: >-
          {% set raw = states('sensor.huskers_records_raw') %}
          {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
          {% set crecs = (data[0].get('conferenceRecords', []) if data else []) %}
          {% set b1g = (crecs | selectattr('conference', 'eq', 'Big Ten') | list | first) %}
          {% if b1g %}
            {{ b1g.get('wins', 0) }}-{{ b1g.get('losses', 0) }}{{ '-' ~ b1g.get('ties', 0) if b1g.get('ties', 0)|int > 0 else '' }}
          {% else %}unknown{% endif %}
        attributes:
          conf_wins: >-
            {% set raw = states('sensor.huskers_records_raw') %}
            {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {% set crecs = (data[0].get('conferenceRecords', []) if data else []) %}
            {% set b1g = (crecs | selectattr('conference', 'eq', 'Big Ten') | list | first) %}
            {{ b1g.get('wins', 0) if b1g else 0 }}
          conf_losses: >-
            {% set raw = states('sensor.huskers_records_raw') %}
            {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {% set crecs = (data[0].get('conferenceRecords', []) if data else []) %}
            {% set b1g = (crecs | selectattr('conference', 'eq', 'Big Ten') | list | first) %}
            {{ b1g.get('losses', 0) if b1g else 0 }}

      # ===== NEW COMPREHENSIVE SENSORS =====

      # Current Rankings
      - name: huskers_current_rankings
        unique_id: huskers_current_rankings
        state: >-
          {% set raw = states('sensor.cfb_rankings_raw') %}
          {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
          {% set polls = {} %}
          {% for week in data %}
            {% for poll in week.get('polls', []) %}
              {% for rank in poll.get('ranks', []) %}
                {% if rank.get('school') == 'Nebraska' %}
                  {% set _ = polls.update({poll.get('poll'): rank.get('rank')}) %}
                {% endif %}
              {% endfor %}
            {% endfor %}
          {% endfor %}
          {% if 'AP Top 25' in polls %}AP: #{{ polls['AP Top 25'] }}{% elif 'Coaches Poll' in polls %}Coaches: #{{ polls['Coaches Poll'] }}{% else %}Unranked{% endif %}
        attributes:
          ap_rank: >-
            {% set raw = states('sensor.cfb_rankings_raw') %}
            {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {% for week in data %}
              {% for poll in week.get('polls', []) %}
                {% if poll.get('poll') == 'AP Top 25' %}
                  {% for rank in poll.get('ranks', []) %}
                    {% if rank.get('school') == 'Nebraska' %}
                      {{ rank.get('rank') }}
                    {% endif %}
                  {% endfor %}
                {% endif %}
              {% endfor %}
            {% endfor %}
          coaches_rank: >-
            {% set raw = states('sensor.cfb_rankings_raw') %}
            {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {% for week in data %}
              {% for poll in week.get('polls', []) %}
                {% if poll.get('poll') == 'Coaches Poll' %}
                  {% for rank in poll.get('ranks', []) %}
                    {% if rank.get('school') == 'Nebraska' %}
                      {{ rank.get('rank') }}
                    {% endif %}
                  {% endfor %}
                {% endif %}
              {% endfor %}
            {% endfor %}

      # Team Ratings Summary
      - name: huskers_ratings_summary
        unique_id: huskers_ratings_summary
        state: >-
          {% set sp_raw = states('sensor.cfb_sp_ratings_raw') %}
          {% set sp_data = sp_raw | from_json if sp_raw | length > 2 and sp_raw.startswith('[') else [] %}
          {% set nebraska_sp = (sp_data | selectattr('team', 'eq', 'Nebraska') | list | first) %}
          {% if nebraska_sp %}SP+: {{ "%.1f" | format(nebraska_sp.get('rating', 0)) }} (#{{ nebraska_sp.get('ranking', 'NR') }}){% else %}SP+: N/A{% endif %}
        attributes:
          sp_rating: >-
            {% set raw = states('sensor.cfb_sp_ratings_raw') %}
            {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {% set nebraska = (data | selectattr('team', 'eq', 'Nebraska') | list | first) %}
            {{ nebraska.get('rating', 0) if nebraska else 0 }}
          sp_ranking: >-
            {% set raw = states('sensor.cfb_sp_ratings_raw') %}
            {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {% set nebraska = (data | selectattr('team', 'eq', 'Nebraska') | list | first) %}
            {{ nebraska.get('ranking', 'NR') if nebraska else 'NR' }}
          elo_rating: >-
            {% set raw = states('sensor.cfb_elo_ratings_raw') %}
            {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {% set nebraska = (data | selectattr('team', 'eq', 'Nebraska') | list | first) %}
            {{ nebraska.get('elo', 0) if nebraska else 0 }}
          fpi_rating: >-
            {% set raw = states('sensor.cfb_fpi_ratings_raw') %}
            {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {% set nebraska = (data | selectattr('team', 'eq', 'Nebraska') | list | first) %}
            {{ nebraska.get('fpi', 0) if nebraska else 0 }}
          talent_rating: >-
            {% set raw = states('sensor.cfb_talent_raw') %}
            {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {% set nebraska = (data | selectattr('school', 'eq', 'Nebraska') | list | first) %}
            {{ nebraska.get('talent', 0) if nebraska else 0 }}

      # Season Statistics Summary
      - name: huskers_offense_stats
        unique_id: huskers_offense_stats
        state: >-
          {% set raw = states('sensor.huskers_season_stats_raw') %}
          {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
          {% set offense = (data | selectattr('category', 'eq', 'offense') | list) %}
          {% set total_yards = (offense | selectattr('statName', 'eq', 'totalYards') | list | first) %}
          {% if total_yards %}{{ total_yards.get('statValue', 0) | round(1) }} total yds/game{% else %}N/A{% endif %}
        attributes:
          total_yards_per_game: >-
            {% set raw = states('sensor.huskers_season_stats_raw') %}
            {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {% set offense = (data | selectattr('category', 'eq', 'offense') | list) %}
            {% set total_yards = (offense | selectattr('statName', 'eq', 'totalYards') | list | first) %}
            {{ total_yards.get('statValue', 0) if total_yards else 0 }}
          passing_yards_per_game: >-
            {% set raw = states('sensor.huskers_season_stats_raw') %}
            {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {% set offense = (data | selectattr('category', 'eq', 'offense') | list) %}
            {% set passing = (offense | selectattr('statName', 'eq', 'passingYards') | list | first) %}
            {{ passing.get('statValue', 0) if passing else 0 }}
          rushing_yards_per_game: >-
            {% set raw = states('sensor.huskers_season_stats_raw') %}
            {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {% set offense = (data | selectattr('category', 'eq', 'offense') | list) %}
            {% set rushing = (offense | selectattr('statName', 'eq', 'rushingYards') | list | first) %}
            {{ rushing.get('statValue', 0) if rushing else 0 }}
          points_per_game: >-
            {% set raw = states('sensor.huskers_season_stats_raw') %}
            {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {% set offense = (data | selectattr('category', 'eq', 'offense') | list) %}
            {% set points = (offense | selectattr('statName', 'eq', 'pointsPerGame') | list | first) %}
            {{ points.get('statValue', 0) if points else 0 }}

      # Defense Statistics
      - name: huskers_defense_stats
        unique_id: huskers_defense_stats
        state: >-
          {% set raw = states('sensor.huskers_season_stats_raw') %}
          {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
          {% set defense = (data | selectattr('category', 'eq', 'defense') | list) %}
          {% set total_yards = (defense | selectattr('statName', 'eq', 'totalYards') | list | first) %}
          {% if total_yards %}{{ total_yards.get('statValue', 0) | round(1) }} yds allowed/game{% else %}N/A{% endif %}
        attributes:
          yards_allowed_per_game: >-
            {% set raw = states('sensor.huskers_season_stats_raw') %}
            {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {% set defense = (data | selectattr('category', 'eq', 'defense') | list) %}
            {% set total_yards = (defense | selectattr('statName', 'eq', 'totalYards') | list | first) %}
            {{ total_yards.get('statValue', 0) if total_yards else 0 }}
          points_allowed_per_game: >-
            {% set raw = states('sensor.huskers_season_stats_raw') %}
            {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {% set defense = (data | selectattr('category', 'eq', 'defense') | list) %}
            {% set points = (defense | selectattr('statName', 'eq', 'pointsPerGame') | list | first) %}
            {{ points.get('statValue', 0) if points else 0 }}

      # Live Game Status (enhanced)
      - name: huskers_live_game_status
        unique_id: huskers_live_game_status
        state: >-
          {% set raw = states('sensor.cfb_scoreboard_raw') %}
          {% set games = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
          {% set huskers_game = namespace(game=none) %}
          {% for game in games %}
            {% if game.get('homeTeam', {}).get('school') == 'Nebraska' or game.get('awayTeam', {}).get('school') == 'Nebraska' %}
              {% set huskers_game.game = game %}
            {% endif %}
          {% endfor %}
          {% if huskers_game.game %}
            {% set status = huskers_game.game.get('status', {}) %}
            {{ status.get('description', 'Unknown') }}
          {% else %}No game today{% endif %}
        attributes:
          home_team: >-
            {% set raw = states('sensor.cfb_scoreboard_raw') %}
            {% set games = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {% for game in games %}
              {% if game.get('homeTeam', {}).get('school') == 'Nebraska' or game.get('awayTeam', {}).get('school') == 'Nebraska' %}
                {{ game.get('homeTeam', {}).get('school', '') }}
              {% endif %}
            {% endfor %}
          away_team: >-
            {% set raw = states('sensor.cfb_scoreboard_raw') %}
            {% set games = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {% for game in games %}
              {% if game.get('homeTeam', {}).get('school') == 'Nebraska' or game.get('awayTeam', {}).get('school') == 'Nebraska' %}
                {{ game.get('awayTeam', {}).get('school', '') }}
              {% endif %}
            {% endfor %}
          home_score: >-
            {% set raw = states('sensor.cfb_scoreboard_raw') %}
            {% set games = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {% for game in games %}
              {% if game.get('homeTeam', {}).get('school') == 'Nebraska' or game.get('awayTeam', {}).get('school') == 'Nebraska' %}
                {{ game.get('homeTeam', {}).get('points', 0) }}
              {% endif %}
            {% endfor %}
          away_score: >-
            {% set raw = states('sensor.cfb_scoreboard_raw') %}
            {% set games = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {% for game in games %}
              {% if game.get('homeTeam', {}).get('school') == 'Nebraska' or game.get('awayTeam', {}).get('school') == 'Nebraska' %}
                {{ game.get('awayTeam', {}).get('points', 0) }}
              {% endif %}
            {% endfor %}

      # Key Players Summary
      - name: huskers_key_players
        unique_id: huskers_key_players
        state: >-
          {% set raw = states('sensor.huskers_player_stats_raw') %}
          {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
          {% set qbs = (data | selectattr('category', 'eq', 'passing') | sort(attribute='stat', reverse=true) | list) %}
          {% set rbs = (data | selectattr('category', 'eq', 'rushing') | sort(attribute='stat', reverse=true) | list) %}
          {% if qbs %}QB: {{ qbs[0].get('player', 'Unknown') }}{% endif %}{% if rbs %} | RB: {{ rbs[0].get('player', 'Unknown') }}{% endif %}
        attributes:
          leading_passer: >-
            {% set raw = states('sensor.huskers_player_stats_raw') %}
            {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {% set qbs = (data | selectattr('category', 'eq', 'passing') | sort(attribute='stat', reverse=true) | list) %}
            {{ qbs[0].get('player', 'Unknown') if qbs else 'Unknown' }}
          leading_rusher: >-
            {% set raw = states('sensor.huskers_player_stats_raw') %}
            {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {% set rbs = (data | selectattr('category', 'eq', 'rushing') | sort(attribute='stat', reverse=true) | list) %}
            {{ rbs[0].get('player', 'Unknown') if rbs else 'Unknown' }}
          leading_receiver: >-
            {% set raw = states('sensor.huskers_player_stats_raw') %}
            {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {% set wrs = (data | selectattr('category', 'eq', 'receiving') | sort(attribute='stat', reverse=true) | list) %}
            {{ wrs[0].get('player', 'Unknown') if wrs else 'Unknown' }}

      # Recruiting Class Ranking
      - name: huskers_recruiting_class
        unique_id: huskers_recruiting_class
        state: >-
          {% set raw = states('sensor.huskers_recruiting_raw') %}
          {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
          {% if data %}
            {% set rec = data[0] %}
            #{{ rec.get('rank', 'NR') }} ({{ rec.get('points', 0) | round(2) }} pts)
          {% else %}N/A{% endif %}
        attributes:
          national_rank: >-
            {% set raw = states('sensor.huskers_recruiting_raw') %}
            {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {{ data[0].get('rank', 'NR') if data else 'NR' }}
          points: >-
            {% set raw = states('sensor.huskers_recruiting_raw') %}
            {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {{ data[0].get('points', 0) if data else 0 }}

      # Enhanced Big Ten standings with more details (Markdown string)
      - name: b1g_standings_detailed
        unique_id: b1g_standings_detailed
        state: >-
          {% set raw = states('sensor.b1g_standings_raw') %}
          {% set data = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
          {% if not data %}
            **Big Ten standings unavailable.**
          {% else %}
            {% set teams = data[0].get('standings', []) %}
            {% set rows = [] %}
            {% for t in teams %}
              {% set name = t.get('team') or t.get('school') %}
              {% set cw = t.get('conferenceWins', t.get('conference', {}).get('wins', 0)) | int %}
              {% set cl = t.get('conferenceLosses', t.get('conference', {}).get('losses', 0)) | int %}
              {% set ow = t.get('overallWins', t.get('total', {}).get('wins', 0)) | int %}
              {% set ol = t.get('overallLosses', t.get('total', {}).get('losses', 0)) | int %}
              {% set cpct = (cw / (cw + cl) if (cw + cl) > 0 else 0) %}
              {% set _ = rows.append({'name': name, 'cw': cw, 'cl': cl, 'ow': ow, 'ol': ol, 'cpct': cpct}) %}
            {% endfor %}
            {% set sorted = rows | sort(attribute='cpct', reverse=true) | list %}
            ## Big Ten Standings ({{ now().year }})
            | Rank | Team | Conf | Overall | Conf % |
            |------|------|------|---------|--------|
            {% for r in sorted -%}
            | {{ loop.index }} | {{ r.name }} | {{ r.cw }}-{{ r.cl }} | {{ r.ow }}-{{ r.ol }} | {{ "%.3f" | format(r.cpct) }} |
            {% endfor %}
          {% endif %}

      # Enhanced Nebraska schedule with betting lines and TV info (Markdown list)
      - name: huskers_schedule_enhanced
        unique_id: huskers_schedule_enhanced
        state: >-
          {% set games_raw = states('sensor.huskers_schedule_raw') %}
          {% set games = games_raw | from_json if games_raw | length > 2 and games_raw.startswith('[') else [] %}
          {% set media_raw = states('sensor.huskers_media_raw') %}
          {% set media = media_raw | from_json if media_raw | length > 2 and media_raw.startswith('[') else [] %}
          {% set lines_raw = states('sensor.huskers_betting_lines_raw') %}
          {% set lines = lines_raw | from_json if lines_raw | length > 2 and lines_raw.startswith('[') else [] %}
          {% if not games %}
            **Schedule unavailable.**
          {% else %}
            {% set lines_dict = {} %}
            {% for line in lines %}
              {% set game_id = line.get('id') %}
              {% if game_id %}
                {% set _ = lines_dict.update({game_id: line}) %}
              {% endif %}
            {% endfor %}
            {% set media_dict = {} %}
            {% for m in media %}
              {% set game_id = m.get('id') %}
              {% if game_id %}
                {% set _ = media_dict.update({game_id: m}) %}
              {% endif %}
            {% endfor %}
            ## Nebraska Schedule ({{ now().year }})
            {% for g in games %}
              {% set start = g.get('start_date') or g.get('startTime') or '' %}
              {% set dt = as_datetime(start) if start else None %}
              {% set date = (dt.astimezone(now().tzinfo).strftime('%b %-d, %-I:%M %p') if dt else 'TBD') %}
              {% set home = g.get('home_team') %}
              {% set away = g.get('away_team') %}
              {% set opp = (away if home == 'Nebraska' else home) %}
              {% set loc = ('vs' if home == 'Nebraska' else 'at') %}
              {% set game_id = g.get('id') %}
              {% set game_media = media_dict.get(game_id, {}) %}
              {% set tv = game_media.get('outlet', 'TBD') %}
              {% set game_lines = lines_dict.get(game_id, {}) %}
              {% set spread = '' %}
              {% if game_lines.get('lines') %}
                {% for ln in game_lines.get('lines', []) %}
                  {% if ln.get('provider') == 'consensus' %}
                    {% set spread = ' (Line: ' ~ ln.get('spread', 'N/A') ~ ')' %}
                  {% endif %}
                {% endfor %}
              {% endif %}
              {% if g.get('completed') %}
                {% set score = (g.get('home_points', '?') ~ '–' ~ g.get('away_points', '?')) %}
                - **{{ date }}** — {{ loc }} {{ opp }} — **Final** {{ score }}{{ ' | ' ~ tv if tv != 'TBD' else '' }}
              {% else %}
                - **{{ date }}** — {{ loc }} {{ opp }}{{ spread }}{{ ' | ' ~ tv if tv != 'TBD' else '' }}
              {% endif %}
            {% endfor %}
          {% endif %}

      # Next Game Information
      - name: huskers_next_game
        unique_id: huskers_next_game
        state: >-
          {% set raw = states('sensor.huskers_schedule_raw') %}
          {% set games = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
          {% set next_game = namespace(game=none) %}
          {% set now_ts = now().timestamp() %}
          {% for g in games %}
            {% if not g.get('completed') %}
              {% set start = g.get('start_date') or g.get('startTime') %}
              {% if start and as_timestamp(start) > now_ts and next_game.game is none %}
                {% set next_game.game = g %}
              {% endif %}
            {% endif %}
          {% endfor %}
          {% if next_game.game %}
            {% set start = next_game.game.get('start_date') or next_game.game.get('startTime') %}
            {% set dt = as_datetime(start) if start else None %}
            {% set home = next_game.game.get('home_team') %}
            {% set away = next_game.game.get('away_team') %}
            {% set opp = (away if home == 'Nebraska' else home) %}
            {% set loc = ('vs' if home == 'Nebraska' else 'at') %}
            {{ loc }} {{ opp }}{% if dt %} on {{ dt.astimezone(now().tzinfo).strftime('%b %-d') }}{% endif %}
          {% else %}No upcoming games{% endif %}
        attributes:
          opponent: >-
            {% set raw = states('sensor.huskers_schedule_raw') %}
            {% set games = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {% set next_game = namespace(game=none) %}
            {% set now_ts = now().timestamp() %}
            {% for g in games %}
              {% if not g.get('completed') %}
                {% set start = g.get('start_date') or g.get('startTime') %}
                {% if start and as_timestamp(start) > now_ts and next_game.game is none %}
                  {% set next_game.game = g %}
                {% endif %}
              {% endif %}
            {% endfor %}
            {% if next_game.game %}
              {% set home = next_game.game.get('home_team') %}
              {% set away = next_game.game.get('away_team') %}
              {{ away if home == 'Nebraska' else home }}
            {% else %}None{% endif %}
          kickoff_time: >-
            {% set raw = states('sensor.huskers_schedule_raw') %}
            {% set games = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {% set next_game = namespace(game=none) %}
            {% set now_ts = now().timestamp() %}
            {% for g in games %}
              {% if not g.get('completed') %}
                {% set start = g.get('start_date') or g.get('startTime') %}
                {% if start and as_timestamp(start) > now_ts and next_game.game is none %}
                  {% set next_game.game = g %}
                {% endif %}
              {% endif %}
            {% endfor %}
            {% if next_game.game %}
              {% set start = next_game.game.get('start_date') or next_game.game.get('startTime') %}
              {{ start if start else 'TBD' }}
            {% else %}None{% endif %}
          home_away: >-
            {% set raw = states('sensor.huskers_schedule_raw') %}
            {% set games = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {% set next_game = namespace(game=none) %}
            {% set now_ts = now().timestamp() %}
            {% for g in games %}
              {% if not g.get('completed') %}
                {% set start = g.get('start_date') or g.get('startTime') %}
                {% if start and as_timestamp(start) > now_ts and next_game.game is none %}
                  {% set next_game.game = g %}
                {% endif %}
              {% endif %}
            {% endfor %}
            {% if next_game.game %}
              {% set home = next_game.game.get('home_team') %}
              {{ 'home' if home == 'Nebraska' else 'away' }}
            {% else %}None{% endif %}

  - binary_sensor:
      # Enhanced game phase detection
      - name: huskers_is_pregame
        unique_id: huskers_is_pregame
        state: >-
          {% set scoreboard_raw = states('sensor.cfb_scoreboard_raw') %}
          {% set games = scoreboard_raw | from_json if scoreboard_raw | length > 2 and scoreboard_raw.startswith('[') else [] %}
          {% set huskers_game = namespace(found=false, status='') %}
          {% for game in games %}
            {% if game.get('homeTeam', {}).get('school') == 'Nebraska' or game.get('awayTeam', {}).get('school') == 'Nebraska' %}
              {% set huskers_game.found = true %}
              {% set huskers_game.status = game.get('status', {}).get('description', '').lower() %}
            {% endif %}
          {% endfor %}
          {% if huskers_game.found %}
            {{ huskers_game.status in ['scheduled', 'pregame', 'pre'] }}
          {% else %}
            {# Fallback to schedule check #}
            {% set raw = states('sensor.huskers_schedule_raw') %}
            {% set schedule = raw | from_json if raw | length > 2 and raw.startswith('[') else [] %}
            {% set today = now().date() %}
            {% set game_today = namespace(found=false, kickoff='') %}
            {% for g in schedule %}
              {% if not g.get('completed') %}
                {% set start = g.get('start_date') or g.get('startTime') %}
                {% if start %}
                  {% set game_date = as_datetime(start).date() %}
                  {% if game_date == today %}
                    {% set game_today.found = true %}
                    {% set game_today.kickoff = start %}
                  {% endif %}
                {% endif %}
              {% endif %}
            {% endfor %}
            {% if game_today.found %}
              {{ as_timestamp(game_today.kickoff) > now().timestamp() }}
            {% else %}
              false
            {% endif %}
          {% endif %}

      - name: huskers_is_live
        unique_id: huskers_is_live
        state: >-
          {% set scoreboard_raw = states('sensor.cfb_scoreboard_raw') %}
          {% set games = scoreboard_raw | from_json if scoreboard_raw | length > 2 and scoreboard_raw.startswith('[') else [] %}
          {% for game in games %}
            {% if game.get('homeTeam', {}).get('school') == 'Nebraska' or game.get('awayTeam', {}).get('school') == 'Nebraska' %}
              {% set status = game.get('status', {}).get('description', '').lower() %}
              {{ status in ['in progress', 'halftime', '1st quarter', '2nd quarter', '3rd quarter', '4th quarter', 'overtime'] }}
            {% endif %}
          {% endfor %}

      - name: huskers_is_postgame
        unique_id: huskers_is_postgame
        state: >-
          {% set scoreboard_raw = states('sensor.cfb_scoreboard_raw') %}
          {% set games = scoreboard_raw | from_json if scoreboard_raw | length > 2 and scoreboard_raw.startswith('[') else [] %}
          {% for game in games %}
            {% if game.get('homeTeam', {}).get('school') == 'Nebraska' or game.get('awayTeam', {}).get('school') == 'Nebraska' %}
              {% set status = game.get('status', {}).get('description', '').lower() %}
              {{ status in ['final', 'completed'] }}
            {% endif %}
          {% endfor %}
