# ===============================
# HUSKERS LIGHTING — PACKAGE
# Eight-light Scarlet↔Cream chase (30s + variable speed) + Hail burst
# + Brightness, Master toggle, Reverse direction, Step-once
# ===============================

# Helpers
input_number:
  huskers_chase_cycle_seconds:
    name: 'Chase Cycle Length'
    icon: mdi:speedometer
    min: 8
    max: 120
    step: 1
    mode: slider
    unit_of_measurement: s
    initial: 30

  # BPM control for Hail Varsity burst (script defaults to 137 if unused)
  huskers_hail_bpm:
    name: 'Hail Varsity BPM'
    icon: mdi:metronome
    min: 60
    max: 200
    step: 1
    mode: slider
    unit_of_measurement: bpm
    initial: 137

  # NEW: Global brightness used by all effects
  huskers_global_brightness:
    name: 'Huskers Brightness'
    icon: mdi:brightness-6
    min: 10
    max: 255
    step: 5
    unit_of_measurement: ''
    mode: slider
    initial: 255

input_boolean:
  # NEW: Master enable/disable for all effects (loops/bursts)
  huskers_effects_enabled:
    name: Huskers Effects Enabled
    icon: mdi:power
    initial: on

  # NEW: Reverse the chase direction (right→left)
  huskers_reverse_direction:
    name: Reverse Chase Direction
    icon: mdi:swap-horizontal-bold
    initial: off

# Light group (for convenience)
group:
  huskers_eight_lights:
    name: Huskers – All Eight Lights
    entities:
      - light.light_theater_left
      - light.light_theater_right
      - light.light_front_left
      - light.light_front_right
      - light.light_garage_left
      - light.lights_garage_center
      - light.light_garage_right
      - light.spare_light

# All-scarlet scene (scarlet = hs[355,90], cream = hs[45,20])
scene:
  - id: huskers_seven_all_scarlet
    name: Huskers – All Scarlet (8)
    entities:
      light.light_theater_left:
        state: 'on'
        hs_color: [355, 90]
        brightness: "{{ states('input_number.huskers_global_brightness')|int(255) }}"
      light.light_theater_right:
        state: 'on'
        hs_color: [355, 90]
        brightness: "{{ states('input_number.huskers_global_brightness')|int(255) }}"
      light.light_front_left:
        state: 'on'
        hs_color: [355, 90]
        brightness: "{{ states('input_number.huskers_global_brightness')|int(255) }}"
      light.light_front_right:
        state: 'on'
        hs_color: [355, 90]
        brightness: "{{ states('input_number.huskers_global_brightness')|int(255) }}"
      light.light_garage_left:
        state: 'on'
        hs_color: [355, 90]
        brightness: "{{ states('input_number.huskers_global_brightness')|int(255) }}"
      light.lights_garage_center:
        state: 'on'
        hs_color: [355, 90]
        brightness: "{{ states('input_number.huskers_global_brightness')|int(255) }}"
      light.light_garage_right:
        state: 'on'
        hs_color: [355, 90]
        brightness: "{{ states('input_number.huskers_global_brightness')|int(255) }}"
      light.spare_light:
        state: 'on'
        hs_color: [355, 90]
        brightness: "{{ states('input_number.huskers_global_brightness')|int(255) }}"

script:
  # ===========================
  # Fixed 30-second chase
  # ===========================
  huskers_chase30_start:
    alias: 'Huskers: Start 30s Cream Chase'
    mode: restart
    sequence:
      - condition: state
        entity_id: input_boolean.huskers_effects_enabled
        state: 'on'

      - service: script.turn_off
        target: { entity_id: script.huskers_chase_speed_loop }
        continue_on_error: true

      - service: scene.create
        data:
          scene_id: huskers_before_chase
          snapshot_entities:
            - light.light_theater_left
            - light.light_theater_right
            - light.light_front_left
            - light.light_front_right
            - light.light_garage_left
            - light.lights_garage_center
            - light.light_garage_right
            - light.spare_light

      - service: light.turn_on
        target:
          entity_id:
            - light.light_theater_left
            - light.light_theater_right
            - light.light_front_left
            - light.light_front_right
            - light.light_garage_left
            - light.lights_garage_center
            - light.light_garage_right
            - light.spare_light
        data:
          hs_color: [355, 90]
          brightness: "{{ states('input_number.huskers_global_brightness')|int(255) }}"
          transition: 0.1

      - service: script.turn_on
        target:
          entity_id: script.huskers_chase30_loop

  huskers_chase30_loop:
    alias: 'Huskers: 30s Cream Chase LOOP'
    mode: restart
    sequence:
      - variables:
          lights_base:
            [
              'light.light_theater_left',
              'light.light_theater_right',
              'light.light_front_left',
              'light.light_front_right',
              'light.light_garage_left',
              'light.lights_garage_center',
              'light.light_garage_right',
              'light.spare_light',
            ]
      - variables:
          lights: >-
            {% set base = lights_base %}
            {{ base | reverse if is_state('input_boolean.huskers_reverse_direction','on') else base }}
          step_ms: 3750 # 30s / 8 = 3.75s per step
          xfade_ms: 300 # crossfade time counted inside step
          hold_ms: '{{ (step_ms - xfade_ms) | int }}'
      - repeat:
          while:
            - condition: template
              value_template: "{{ is_state('input_boolean.huskers_effects_enabled','on') }}"
          sequence:
            - repeat:
                for_each: '{{ lights }}'
                sequence:
                  - variables:
                      current: '{{ repeat.item }}'
                      prev_index: '{{ (repeat.index - 2) % (lights | count) }}'
                      previous: '{{ lights[prev_index|int] }}'
                  - service: light.turn_on
                    target: { entity_id: '{{ previous }}' }
                    data:
                      hs_color: [355, 90]
                      brightness: "{{ states('input_number.huskers_global_brightness')|int(255) }}"
                      transition: 0.3
                  - service: light.turn_on
                    target: { entity_id: '{{ current }}' }
                    data:
                      hs_color: [45, 20]
                      brightness: "{{ states('input_number.huskers_global_brightness')|int(255) }}"
                      transition: 0.3
                  - delay:
                      milliseconds: '{{ hold_ms | int }}'

  huskers_chase30_stop:
    alias: 'Huskers: Stop 30s Chase (restore)'
    mode: single
    sequence:
      - service: script.turn_off
        target: { entity_id: script.huskers_chase30_loop }
      - delay: '00:00:00.5'
      - service: scene.turn_on
        target:
          entity_id: scene.huskers_before_chase
        continue_on_error: true

  # ===========================
  # Variable-speed chase
  # ===========================
  huskers_chase_speed_start:
    alias: 'Huskers: Start Cream Chase (Variable-Speed)'
    mode: restart
    sequence:
      - condition: state
        entity_id: input_boolean.huskers_effects_enabled
        state: 'on'

      - service: script.turn_off
        target: { entity_id: script.huskers_chase30_loop }
        continue_on_error: true

      - service: scene.create
        data:
          scene_id: huskers_before_chase
          snapshot_entities:
            - light.light_theater_left
            - light.light_theater_right
            - light.light_front_left
            - light.light_front_right
            - light.light_garage_left
            - light.lights_garage_center
            - light.light_garage_right
            - light.spare_light

      - service: light.turn_on
        target:
          entity_id:
            - light.light_theater_left
            - light.light_theater_right
            - light.light_front_left
            - light.light_front_right
            - light.light_garage_left
            - light.lights_garage_center
            - light.light_garage_right
            - light.spare_light
        data:
          hs_color: [355, 90]
          brightness: "{{ states('input_number.huskers_global_brightness')|int(255) }}"
          transition: 0.1

      - service: script.turn_on
        target:
          entity_id: script.huskers_chase_speed_loop

  huskers_chase_speed_loop:
    alias: 'Huskers: Cream Chase LOOP (Variable-Speed)'
    mode: restart
    sequence:
      - variables:
          lights_base:
            [
              'light.light_theater_left',
              'light.light_theater_right',
              'light.light_front_left',
              'light.light_front_right',
              'light.light_garage_left',
              'light.lights_garage_center',
              'light.light_garage_right',
              'light.spare_light',
            ]
      - repeat:
          while:
            - condition: template
              value_template: "{{ is_state('input_boolean.huskers_effects_enabled','on') }}"
          sequence:
            - variables:
                lights: >-
                  {% set base = lights_base %}
                  {{ base | reverse if is_state('input_boolean.huskers_reverse_direction','on') else base }}
                cycle_secs: "{{ states('input_number.huskers_chase_cycle_seconds') | float(30) }}"
                step_ms: '{{ (cycle_secs * 1000 / (lights | count)) | int }}'
                xfade_ms: 300
                hold_ms: '{{ [ (step_ms - xfade_ms) | int, 250 ] | max }}'
            - repeat:
                for_each: '{{ lights }}'
                sequence:
                  - variables:
                      current: '{{ repeat.item }}'
                      prev_index: '{{ (repeat.index - 2) % (lights | count) }}'
                      previous: '{{ lights[prev_index|int] }}'
                  - service: light.turn_on
                    target: { entity_id: '{{ previous }}' }
                    data:
                      hs_color: [355, 90]
                      brightness: "{{ states('input_number.huskers_global_brightness')|int(255) }}"
                      transition: 0.3
                  - service: light.turn_on
                    target: { entity_id: '{{ current }}' }
                    data:
                      hs_color: [45, 20]
                      brightness: "{{ states('input_number.huskers_global_brightness')|int(255) }}"
                      transition: 0.3
                  - delay:
                      milliseconds: '{{ hold_ms | int }}'

  huskers_chase_speed_stop:
    alias: 'Huskers: Stop Cream Chase (Variable-Speed, restore)'
    mode: single
    sequence:
      - service: script.turn_off
        target: { entity_id: script.huskers_chase_speed_loop }
      - delay: '00:00:00.5'
      - service: scene.turn_on
        target:
          entity_id: scene.huskers_before_chase
        continue_on_error: true

  # ===========================
  # Hail Varsity BPM-synced burst (8s)
  # ===========================
  huskers_hail_burst_8s:
    alias: 'Huskers: Hail Varsity Burst (8s, BPM-synced)'
    mode: restart
    fields:
      bpm:
        description: 'Optional BPM override (defaults to helper or 137).'
        example: 137
    sequence:
      - condition: state
        entity_id: input_boolean.huskers_effects_enabled
        state: 'on'

      - service: script.turn_off
        target:
          entity_id:
            - script.huskers_chase30_loop
            - script.huskers_chase_speed_loop
        continue_on_error: true

      - service: scene.create
        data:
          scene_id: huskers_before_hail_burst
          snapshot_entities:
            - light.light_theater_left
            - light.light_theater_right
            - light.light_front_left
            - light.light_front_right
            - light.light_garage_left
            - light.lights_garage_center
            - light.light_garage_right
            - light.spare_light

      - service: light.turn_on
        target:
          entity_id:
            - light.light_theater_left
            - light.light_theater_right
            - light.light_front_left
            - light.light_front_right
            - light.light_garage_left
            - light.lights_garage_center
            - light.light_garage_right
            - light.spare_light
        data:
          hs_color: [355, 90]
          brightness: "{{ states('input_number.huskers_global_brightness')|int(255) }}"
          transition: 0.05

      - variables:
          lights:
            [
              'light.light_theater_left',
              'light.light_theater_right',
              'light.light_front_left',
              'light.light_front_right',
              'light.light_garage_left',
              'light.lights_garage_center',
              'light.light_garage_right',
              'light.spare_light',
            ]
          bpm_val: >-
            {{ bpm if bpm is defined and bpm|float(0) > 0
               else states('input_number.huskers_hail_bpm')|float(137) }}
          beat_ms: '{{ (60000 / bpm_val) | int }}'
          half_ms: '{{ (beat_ms / 2) | int }}'
          beats_total: '{{ [ (8000 / beat_ms) | int, 1 ] | max }}'

      - repeat:
          count: '{{ beats_total }}'
          sequence:
            - variables:
                a: '{{ lights | random }}'
                remaining1: "{{ (lights | reject('equalto', a) | list) }}"
                b: '{{ remaining1 | random }}'
                include_c: '{{ [true, false] | random }}'
                remaining2: "{{ (remaining1 | reject('equalto', b) | list) }}"
                c: '{{ remaining2 | random if include_c else none }}'
                burst_targets: >-
                  {% set out = [a, b] %}
                  {% if c is not none %}{% set out = out + [c] %}{% endif %}
                  {{ out }}

            - service: light.turn_on
              target:
                entity_id: '{{ burst_targets }}'
              data:
                hs_color: [45, 20]
                brightness: "{{ states('input_number.huskers_global_brightness')|int(255) }}"
                transition: 0.05

            - delay:
                milliseconds: '{{ half_ms }}'
            - service: light.turn_on
              target:
                entity_id: '{{ burst_targets }}'
              data:
                hs_color: [355, 90]
                brightness: "{{ states('input_number.huskers_global_brightness')|int(255) }}"
                transition: 0.08
            - delay:
                milliseconds: '{{ half_ms }}'

      - service: scene.turn_on
        target:
          entity_id: scene.huskers_before_hail_burst
        continue_on_error: true

  # ===========================
  # NEW — One-shot step (debug/testing)
  # ===========================
  huskers_chase_step_once:
    alias: 'Huskers: Step Once'
    mode: restart
    sequence:
      - condition: state
        entity_id: input_boolean.huskers_effects_enabled
        state: 'on'
      - variables:
          lights:
            [
              'light.light_theater_left',
              'light.light_theater_right',
              'light.light_front_left',
              'light.light_front_right',
              'light.light_garage_left',
              'light.lights_garage_center',
              'light.light_garage_right',
              'light.spare_light',
            ]
      - service: light.turn_on
        target: { entity_id: '{{ lights | random }}' }
        data:
          hs_color: [45, 20]
          brightness: "{{ states('input_number.huskers_global_brightness')|int(255) }}"
          transition: 0.05
      - delay: '00:00:00.25'
      - service: light.turn_on
        target:
          entity_id:
            - light.light_theater_left
            - light.light_theater_right
            - light.light_front_left
            - light.light_front_right
            - light.light_garage_left
            - light.lights_garage_center
            - light.light_garage_right
            - light.spare_light
        data:
          hs_color: [355, 90]
          brightness: "{{ states('input_number.huskers_global_brightness')|int(255) }}"
          transition: 0.08
