# Repository metrics & devices dashboard package
# Auto-generated by assistant to provide overview, lighting, safety, network, and area-focused views.

homeassistant:
  customize:
    sensor.repo_primary_weather:
      friendly_name: Repo Primary Weather
    sensor.repo_next_calendar_event:
      friendly_name: Repo Next Calendar Event


template:
  - trigger:
      - platform: homeassistant
        event: start
      - platform: time_pattern
        minutes: "/5"
    sensor:
      - name: Repo Lights On Total
        unique_id: repo_lights_on_total
        icon: mdi:lightbulb-group
        unit_of_measurement: devices
        state: >-
          {{ states.light | selectattr('state', 'eq', 'on') | list | count }}
      - name: Repo Devices Offline Total
        unique_id: repo_devices_offline_total
        icon: mdi:lan-disconnect
        unit_of_measurement: devices
        state: >-
          {% set tracked_domains = ['binary_sensor', 'sensor', 'switch', 'light', 'climate', 'fan', 'cover', 'device_tracker'] %}
          {% set counter = namespace(total=0) %}
          {% for item in states %}
            {% if item.domain in tracked_domains and item.state in ['unavailable', 'unknown', 'offline'] %}
              {% set counter.total = counter.total + 1 %}
            {% endif %}
          {% endfor %}
          {{ counter.total }}
      - name: Repo Stale Sensors Total
        unique_id: repo_stale_sensors_total
        icon: mdi:timer-sand
        unit_of_measurement: sensors
        state: >-
          {% set threshold = now() - timedelta(hours=6) %}
          {% set counter = namespace(total=0) %}
          {% for item in states %}
            {% if item.domain in ['sensor', 'binary_sensor'] %}
              {% if item.state not in ['unavailable', 'unknown'] and item.last_changed < threshold %}
                {% set counter.total = counter.total + 1 %}
              {% endif %}
            {% endif %}
          {% endfor %}
          {{ counter.total }}
      - name: Repo Low Battery Total
        unique_id: repo_low_battery_total
        icon: mdi:battery-alert
        unit_of_measurement: devices
        state: >-
          {% set threshold = 30 %}
          {% set counter = namespace(total=0) %}
          {% for ent in states %}
            {% if ent.attributes.device_class == 'battery' and ent.state not in ['unavailable', 'unknown', none] %}
              {% if ent.domain == 'binary_sensor' and ent.state == 'on' %}
                {% set counter.total = counter.total + 1 %}
              {% elif ent.domain != 'binary_sensor' and ent.state | float(100) < threshold %}
                {% set counter.total = counter.total + 1 %}
              {% endif %}
            {% endif %}
          {% endfor %}
          {{ counter.total }}
      - name: Repo Updates Available Total
        unique_id: repo_updates_available_total
        icon: mdi:update
        unit_of_measurement: updates
        state: >-
          {{ states.update | selectattr('state', 'eq', 'on') | list | count }}
      - name: Repo Primary Weather
        unique_id: repo_primary_weather
        icon: mdi:weather-partly-cloudy
        state: >-
          {% set configured = states('input_text.weather_pws_entity') %}
          {% set configured = configured if configured not in ['', 'unknown', 'unavailable', none] else none %}
          {% set fallback = states.weather | map(attribute='entity_id') | list | first %}
          {% set weather_entity = configured if configured else fallback %}
          {% if weather_entity %}
            {{ states(weather_entity) }}
          {% else %}
            unknown
          {% endif %}
        attributes:
          source_entity: >-
            {% set configured = states('input_text.weather_pws_entity') %}
            {% if configured in ['', 'unknown', 'unavailable', none] %}
              {% set configured = none %}
            {% endif %}
            {% set fallback = states.weather | map(attribute='entity_id') | list | first %}
            {% set weather_entity = configured if configured else fallback %}
            {{ weather_entity if weather_entity else none }}
          temperature: >-
            {% set configured = states('input_text.weather_pws_entity') %}
            {% if configured in ['', 'unknown', 'unavailable', none] %}
              {% set configured = none %}
            {% endif %}
            {% set fallback = states.weather | map(attribute='entity_id') | list | first %}
            {% set weather_entity = configured if configured else fallback %}
            {% if weather_entity %}
              {{ state_attr(weather_entity, 'temperature') }}
            {% else %}
              {{ none }}
            {% endif %}
          humidity: >-
            {% set configured = states('input_text.weather_pws_entity') %}
            {% if configured in ['', 'unknown', 'unavailable', none] %}
              {% set configured = none %}
            {% endif %}
            {% set fallback = states.weather | map(attribute='entity_id') | list | first %}
            {% set weather_entity = configured if configured else fallback %}
            {% if weather_entity %}
              {{ state_attr(weather_entity, 'humidity') }}
            {% else %}
              {{ none }}
            {% endif %}
      - name: Repo Next Calendar Event
        unique_id: repo_next_calendar_event
        icon: mdi:calendar-star
        state: >-
          {% set ns = namespace(next_title=None, next_start=None, next_entity=None) %}
          {% for cal in states.calendar %}
            {% set start = state_attr(cal.entity_id, 'start_time') %}
            {% if start %}
              {% set start_dt = as_datetime(start) %}
              {% if start_dt and start_dt >= now() %}
                {% if ns.next_start is none or start_dt < ns.next_start %}
                  {% set ns.next_start = start_dt %}
                  {% set ns.next_title = state_attr(cal.entity_id, 'message') or cal.name %}
                  {% set ns.next_entity = cal.entity_id %}
                {% endif %}
              {% endif %}
            {% endif %}
          {% endfor %}
          {% if ns.next_title %}
            {{ ns.next_title }}
          {% else %}
            none
          {% endif %}
        attributes:
          start_time: >-
            {% set ns = namespace(next_start=None) %}
            {% for cal in states.calendar %}
              {% set start = state_attr(cal.entity_id, 'start_time') %}
              {% if start %}
                {% set start_dt = as_datetime(start) %}
                {% if start_dt and start_dt >= now() %}
                  {% if ns.next_start is none or start_dt < ns.next_start %}
                    {% set ns.next_start = start_dt %}
                  {% endif %}
                {% endif %}
              {% endif %}
            {% endfor %}
            {% if ns.next_start %}
              {{ ns.next_start.isoformat() }}
            {% else %}
              {{ none }}
            {% endif %}
          calendar_entity: >-
            {% set ns = namespace(next_entity=None, next_start=None) %}
            {% for cal in states.calendar %}
              {% set start = state_attr(cal.entity_id, 'start_time') %}
              {% if start %}
                {% set start_dt = as_datetime(start) %}
                {% if start_dt and start_dt >= now() %}
                  {% if ns.next_start is none or start_dt < ns.next_start %}
                    {% set ns.next_start = start_dt %}
                    {% set ns.next_entity = cal.entity_id %}
                  {% endif %}
                {% endif %}
              {% endif %}
            {% endfor %}
            {{ ns.next_entity }}
