# =========================
# HUSKERS — GAME FLOW (effective sensors)
# =========================
# Uses:
# - sensor.huskers_kickoff_in_effective
# - sensor.huskers_our_score_effective
# Test mode via input_boolean.huskers_test_mode.

# T-20 → start theater + exterior shows + LED Gametime
- id: huskers_pregame_tminus20_showtime
  alias: 'Huskers: Showtime at T-20'
  mode: single
  trigger:
    - platform: numeric_state
      entity_id: sensor.huskers_kickoff_in_effective
      above: 19
      below: 21
  condition:
    - condition: or
      conditions:
        - condition: state
          entity_id: binary_sensor.huskers_pregame_window
          state: 'on'
        - condition: state
          entity_id: input_boolean.huskers_test_mode
          state: 'on'
    # Avoid needless restarts if either show is already running
    - condition: template
      value_template: >-
        {{ is_state('script.huskers_theater_show_start','off')
           or is_state('script.huskers_exterior_show_start','off') }}
  action:
    - service: script.turn_on
      target:
        entity_id:
          - script.huskers_theater_show_start
          - script.huskers_exterior_show_start
          - script.huskers_led_gameday_start

# Nebraska score increased → BPM bursts + LED Huskers burst
- id: huskers_td_burst_on_score
  alias: 'Huskers: TD Burst on Score'
  mode: single
  trigger:
    - platform: state
      entity_id: sensor.huskers_our_score_effective
  condition:
    - condition: template
      value_template: >-
        {{ trigger.from_state is not none and
           trigger.to_state is not none and
           (trigger.to_state.state | int(0)) >
           (trigger.from_state.state | int(0)) }}
  action:
    - service: script.turn_on
      target:
        entity_id:
          - script.huskers_td_burst_bpm_theater
          - script.huskers_td_burst_bpm_exterior
          - script.huskers_led_td_burst

# Postgame → stop both shows and restore snapshots
- id: huskers_postgame_cleanup
  alias: 'Huskers: Postgame Cleanup'
  mode: single
  trigger:
    - platform: state
      entity_id: binary_sensor.huskers_postgame_window
      from: 'on'
      to: 'off'
  action:
    - service: script.turn_on
      target:
        entity_id:
          - script.huskers_theater_show_stop
          - script.huskers_exterior_show_stop

# =========================
# Evening / Night / Early AM
# =========================

# Sunset → mainfloor 60%, front+garage 1%, permanent LED 50%
- id: evening_lights_at_sunset
  alias: 'Evening Lights at Sunset'
  mode: single
  trigger:
    - platform: sun
      event: sunset
  action:
    - parallel:
        - service: light.turn_on
          target:
            entity_id:
              - light.sunroom_light
              - light.diningroom_light
              - light.livingroom_light
          data:
            brightness_pct: 60
        - service: light.turn_on
          target:
            entity_id:
              - light.front_porch_lights
              - light.garage_left
              - light.garage_center
              - light.garage_right
          data:
            brightness_pct: 1
        - service: light.turn_on
          target:
            entity_id: light.permanent_outdoor_lights
          data:
            brightness_pct: 50

# Midnight → mainfloor OFF, front+garage OFF, permanent LED 20%
- id: night_lights_at_midnight
  alias: 'Night Lights at Midnight'
  mode: single
  trigger:
    - platform: time
      at: '00:00:00'
  action:
    - parallel:
        - service: light.turn_off
          target:
            entity_id:
              - light.sunroom_light
              - light.diningroom_light
              - light.livingroom_light
        - service: light.turn_off
          target:
            entity_id:
              - light.front_porch_lights
              - light.garage_left
              - light.garage_center
              - light.garage_right
        - service: light.turn_on
          target:
            entity_id: light.permanent_outdoor_lights
          data:
            brightness_pct: 20

# 03:30 → mainfloor 10%, front+garage 1%, permanent LED 50%
- id: early_morning_lights_0330
  alias: 'Early Morning Lights (03:30)'
  mode: single
  trigger:
    - platform: time
      at: '03:30:00'
  action:
    - parallel:
        - service: light.turn_on
          target:
            entity_id:
              - light.sunroom_light
              - light.diningroom_light
              - light.livingroom_light
          data:
            brightness_pct: 10
        - service: light.turn_on
          target:
            entity_id:
              - light.front_porch_lights
              - light.garage_left
              - light.garage_center
              - light.garage_right
          data:
            brightness_pct: 1
        - service: light.turn_on
          target:
            entity_id: light.permanent_outdoor_lights
          data:
            brightness_pct: 50

# Monthly effect at midnight (kept as-is)
- id: exterior_led_monthly_effect
  alias: 'Exterior LED - Monthly Effect'
  mode: single
  trigger:
    - platform: time
      at: '00:00:00'
  variables:
    current_month: '{{ now().month }}'
    monthly_effects:
      1: LED-January
      2: LED-February
      3: LED-March
      4: LED-April
      5: BSMT-Patriotic
      6: BSMT-Patriotic
      7: BSMT-Patriotic
      8: LED-August
      9: LED-August
      10: Halloween
      11: LED-Thanksgiving
      12: Christmas
  action:
    - variables:
        target_effect: '{{ monthly_effects[current_month] }}'
    - condition: template
      value_template: >-
        {{ target_effect in (state_attr('light.permanent_outdoor_lights',
        'effect_list') or []) }}
    - service: light.turn_on
      target:
        entity_id: light.permanent_outdoor_lights
      data:
        effect: '{{ target_effect }}'

# Interior off 15 min after sunrise
- id: interior_lights_sunrise_off
  alias: 'Interior Lights Off - 15 Minutes After Sunrise'
  mode: single
  trigger:
    - platform: sun
      event: sunrise
      offset: '00:15:00'
  action:
    - service: light.turn_off
      target:
        entity_id:
          - light.sunroom_light
          - light.livingroom_light
          - light.diningroom_light

# =========================
# CORE / ENVIRONMENT
# =========================

# Humidor plug — ON >74°F, OFF <68°F (hysteresis)
- id: humidor_plug_temp_control
  alias: 'Humidor Plug – Temperature Control'
  description: >-
    Turn ON humidor plug when temp > 74°F; turn OFF when temp < 68°F.
  mode: single
  trigger:
    - platform: numeric_state
      entity_id: sensor.hygrometer_humidor_temperature
      above: 74
    - platform: numeric_state
      entity_id: sensor.hygrometer_humidor_temperature
      below: 68
  action:
    - choose:
        - conditions:
            - condition: numeric_state
              entity_id: sensor.hygrometer_humidor_temperature
              above: 74
          sequence:
            - condition: state
              entity_id: switch.plug_humidor
              state: 'off'
            - service: switch.turn_on
              target:
                entity_id: switch.plug_humidor
        - conditions:
            - condition: numeric_state
              entity_id: sensor.hygrometer_humidor_temperature
              below: 68
          sequence:
            - condition: state
              entity_id: switch.plug_humidor
              state: 'on'
            - service: switch.turn_off
              target:
                entity_id: switch.plug_humidor

# =========================
# HUSKERS — DEBUG / PLACEHOLDERS
# =========================

- id: huskers_update_last_score_test
  alias: 'Huskers: Update Last Score (Test)'
  mode: restart
  trigger:
    - platform: state
      entity_id: input_text.huskers_last_score
  action:
    - service: logbook.log
      data:
        name: 'Huskers – Update Last Score (Test)'
        message: 'Placeholder: add actions here.'

- id: huskers_react_to_test_score
  alias: 'Huskers: React to Test Score'
  mode: single
  trigger:
    - platform: state
      entity_id: sensor.huskers_last_score_test
  action:
    - service: logbook.log
      data:
        name: 'Huskers – React to Test Score'
        message: 'Placeholder: add actions here.'

- id: huskers_new_item_notifier
  alias: 'Huskers: New Item Notifier'
  mode: single
  trigger: []
  action:
    - service: logbook.log
      data:
        name: 'Huskers – New Item Notifier'
        message: 'Placeholder: add triggers/actions.'

# =========================
# HUSKERS — Automations
# =========================

# Set permanent LEDs to LED_Gametime on kickoff
- id: huskers_set_led_gametime_on_kickoff
  alias: 'Huskers: Set LED Gametime on Kickoff'
  mode: single
  trigger:
    - platform: state
      entity_id: sensor.husker_team
      to: 'IN'
  action:
    - service: light.turn_on
      target: { entity_id: light.permanent_outdoor_lights }
      data: { effect: LED_Gametime }

# After game ends (POST), wait 20 minutes then run monthly effect automation
- id: huskers_postgame_monthly_effect_after_20m
  alias: 'Huskers: Postgame → Monthly LED Effect (20m)'
  mode: single
  trigger:
    - platform: state
      entity_id: sensor.husker_team
      to: 'POST'
  action:
    - delay: '00:20:00'
    - service: automation.trigger
      target:
        entity_id: automation.exterior_led_monthly_effect
