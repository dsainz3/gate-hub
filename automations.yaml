# === AUTOMATIONS (Updated for unified system) ===

- id: huskers_pregame_tminus20_showtime
  alias: 'Huskers: Pregame Showtime (T-20 Minutes)'
  description: >
    Starts combined light shows and sets LED to gameday mode when
    19–21 minutes remain until kickoff. Only activates if shows aren't already
    running and game mode is enabled.
  initial_state: true
  mode: single
  trigger:
    - platform: numeric_state
      entity_id: sensor.huskers_kickoff_in_effective
      above: 19
      below: 21
      for:
        seconds: 5
  condition:
    - condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.huskers_game_mode
          state: 'on'
        - condition: or
          conditions:
            - condition: state
              entity_id: binary_sensor.huskers_pregame_window
              state: 'on'
            - condition: state
              entity_id: input_boolean.huskers_test_mode
              state: 'on'
        - condition: state
          entity_id: script.huskers_combined_show_start
          state: 'off'
  action:
    - service: script.turn_on
      target:
        entity_id: script.huskers_combined_show_start
    - service: logbook.log
      data:
        name: Huskers Automation
        message: 'Pregame shows started - T-{{ trigger.to_state.state }} minutes'

- id: huskers_td_burst_on_score
  alias: 'Huskers: Touchdown Celebration'
  description: >
    Triggers synchronized BPM-based light bursts when Nebraska scores increase.
    Uses effective score sensor to support both real game data and manual testing.
  initial_state: true
  mode: single
  trigger:
    - platform: state
      entity_id: sensor.huskers_our_score_effective
  condition:
    - condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.huskers_game_mode
          state: 'on'
        - condition: template
          value_template: >-
            {{ trigger.from_state is not none and
               trigger.to_state is not none and
               (trigger.to_state.state | int(0)) > (trigger.from_state.state | int(0)) }}
  action:
    - variables:
        score_increase: >-
          {{ (trigger.to_state.state | int(0)) - (trigger.from_state.state | int(0)) }}
        celebration_type: >-
          {% if score_increase >= 6 %}touchdown
          {% elif score_increase >= 3 %}field_goal
          {% else %}other
          {% endif %}
    - parallel:
        - service: script.turn_on
          target:
            entity_id: script.huskers_td_burst_combined
        - service: script.turn_on
          target:
            entity_id: script.huskers_led_td_burst
    - service: logbook.log
      data:
        name: Huskers Celebration
        message: >-
          {{ celebration_type.title() }} celebration! Score:
          {{ trigger.from_state.state }} → {{ trigger.to_state.state }}
        entity_id: automation.huskers_td_burst_on_score

- id: huskers_postgame_cleanup
  alias: 'Huskers: Postgame Cleanup'
  description: >
    Stops all game-day light shows and restores previous lighting states
    when the postgame window closes.
  initial_state: true
  mode: single
  trigger:
    - platform: state
      entity_id: binary_sensor.huskers_postgame_window
      from: 'on'
      to: 'off'
  condition:
    - condition: state
      entity_id: input_boolean.huskers_game_mode
      state: 'on'
  action:
    - service: script.turn_on
      target:
        entity_id: script.huskers_cleanup_all
    - service: logbook.log
      data:
        name: Huskers Automation
        message: 'Postgame cleanup completed - shows stopped and lights restored'
        entity_id: automation.huskers_postgame_cleanup

- id: evening_lights_at_sunset
  alias: 'Lighting: Evening Lights at Sunset'
  description: >
    Activates evening lighting scene at sunset: main floor lights to 60%,
    warm front/garage lights, and exterior LED to 50% brightness.
  mode: single
  trigger:
    - platform: sun
      event: sunset
      offset: '00:05:00'
  condition:
    - condition: not
      conditions:
        - condition: and
          conditions:
            - condition: state
              entity_id: input_boolean.huskers_game_mode
              state: 'on'
            - condition: or
              conditions:
                - condition: state
                  entity_id: binary_sensor.huskers_pregame_window
                  state: 'on'
                - condition: state
                  entity_id: binary_sensor.huskers_game_in_progress_tt
                  state: 'on'
  action:
    - parallel:
        - service: light.turn_on
          target:
            entity_id:
              - light.sunroom_light
              - light.diningroom_light
              - light.livingroom_light
          data:
            brightness_pct: 60
            transition: 2
        - service: light.turn_on
          target:
            entity_id:
              - light.front_porch_lights
              - light.garage_left
              - light.garage_center
              - light.garage_right
          data:
            color_temp: 500
            brightness_pct: 10
            transition: 2
        - service: light.turn_on
          target:
            entity_id: light.permanent_outdoor_lights
          data:
            brightness_pct: 50
            transition: 2
          continue_on_error: true

- id: night_mode_at_midnight
  alias: 'Lighting: Night Mode at Midnight'
  description: >
    Transitions to night mode: turns off interior and accent lights, dims
    exterior LED to 20% for security/navigation.
  mode: single
  trigger:
    - platform: time
      at: '00:00:00'
  action:
    - parallel:
        - service: light.turn_off
          target:
            entity_id:
              - light.sunroom_light
              - light.diningroom_light
              - light.livingroom_light
              - light.theater_lights
          data:
            transition: 5
        - service: light.turn_off
          target:
            entity_id:
              - light.front_porch_lights
              - light.garage_left
              - light.garage_center
              - light.garage_right
          data:
            transition: 5
        - service: light.turn_on
          target:
            entity_id: light.permanent_outdoor_lights
          data:
            brightness_pct: 20
            transition: 5
          continue_on_error: true

- id: early_morning_lights_0330
  alias: 'Lighting: Early Morning Gentle Wake (3:30 AM)'
  description: >
    Gentle ambient lighting for early risers: 10% main floor lights,
    warm accent lighting, and moderate exterior illumination.
  mode: single
  trigger:
    - platform: time
      at: '03:30:00'
  action:
    - parallel:
        - service: light.turn_on
          target:
            entity_id:
              - light.sunroom_light
              - light.diningroom_light
              - light.livingroom_light
          data:
            brightness_pct: 10
            color_temp: 454
            transition: 3
        - service: light.turn_on
          target:
            entity_id:
              - light.front_porch_lights
              - light.garage_left
              - light.garage_center
              - light.garage_right
          data:
            color_temp: 500
            brightness_pct: 10
            transition: 3
        - service: light.turn_on
          target:
            entity_id: light.permanent_outdoor_lights
          data:
            brightness_pct: 50
            transition: 3
          continue_on_error: true

- id: interior_lights_sunrise_off
  alias: 'Lighting: Morning Lights Off (Sunrise + 15min)'
  description: >
    Turns off ambient interior lighting 15 minutes after sunrise to conserve
    energy when natural light is sufficient.
  mode: single
  trigger:
    - platform: sun
      event: sunrise
      offset: '00:15:00'
  condition:
    - condition: not
      conditions:
        - condition: state
          entity_id: input_boolean.huskers_game_mode
          state: 'on'
  action:
    - service: light.turn_off
      target:
        entity_id:
          - light.sunroom_light
          - light.livingroom_light
          - light.diningroom_light
      data:
        transition: 10

- id: exterior_lights_sunrise_off
  alias: 'Lighting: Morning Lights Off (Sunrise)'
  description: >
    Turns off exterior lighting 5 minutes after sunrise to conserve energy
    when natural light is sufficient.
  mode: single
  trigger:
    - platform: sun
      event: sunrise
      offset: '00:05:00'
  condition:
    - condition: not
      conditions:
        - condition: state
          entity_id: input_boolean.huskers_game_mode
          state: 'on'
  action:
    - service: light.turn_off
      target:
        entity_id:
          - light.front_porch_lights
          - light.garage_center
          - light.garage_right
          - light.garage_left
          - light.permanent_outdoor_lights
      data:
        transition: 10

- id: exterior_led_monthly_effect
  alias: 'LED: Monthly Effect Scheduler'
  description: >
    Sets seasonal/holiday-appropriate effects on the exterior LED strip.
    Checks if the requested effect exists before applying.
  mode: single
  trigger:
    - platform: time
      at: '00:00:01'
    - platform: homeassistant
      event: start
  variables:
    current_month: '{{ now().month }}'
    monthly_effects:
      1: LED-January
      2: LED-February
      3: LED-March
      4: LED-April
      5: BSMT-Patriotic
      6: BSMT-Patriotic
      7: BSMT-Patriotic
      8: LED-August
      9: LED-August
      10: Halloween
      11: LED-Thanksgiving
      12: Christmas
    target_effect: '{{ monthly_effects[current_month] }}'
  action:
    - condition: template
      value_template: >-
        {% set available_effects = state_attr('light.permanent_outdoor_lights','effect_list') or [] %}
        {{ target_effect in available_effects }}
    - service: light.turn_on
      target:
        entity_id: light.permanent_outdoor_lights
      data:
        effect: '{{ target_effect }}'
      continue_on_error: true
    - service: logbook.log
      data:
        name: LED Monthly Effect
        message: 'Applied {{ target_effect }} effect for month {{ current_month }}'

- id: humidor_plug_temp_control
  alias: 'Climate: Humidor Temperature Control'
  description: >
    Hysteresis temperature control for humidor: cooling ON above 74°F,
    OFF below 68°F.
  mode: single
  trigger:
    - platform: numeric_state
      entity_id: sensor.hygrometer_humidor_temperature
      above: 74
      for:
        minutes: 2
    - platform: numeric_state
      entity_id: sensor.hygrometer_humidor_temperature
      below: 68
      for:
        minutes: 2
  condition:
    - condition: template
      value_template: >-
        {% set temp = trigger.to_state.state | float(-999) %}
        {% set current_state = states('switch.plug_humidor') %}
        {% if temp > 74 and current_state == 'off' %} true
        {% elif temp < 68 and current_state == 'on' %} true
        {% else %} false
        {% endif %}
  action:
    - choose:
        - conditions:
            - condition: numeric_state
              entity_id: sensor.hygrometer_humidor_temperature
              above: 74
          sequence:
            - service: switch.turn_on
              target:
                entity_id: switch.plug_humidor
            - service: logbook.log
              data:
                name: Humidor Control
                message: 'Cooling ON - Temperature: {{ trigger.to_state.state }}°F'
        - conditions:
            - condition: numeric_state
              entity_id: sensor.hygrometer_humidor_temperature
              below: 68
          sequence:
            - service: switch.turn_off
              target:
                entity_id: switch.plug_humidor
            - service: logbook.log
              data:
                name: Humidor Control
                message: 'Cooling OFF - Temperature: {{ trigger.to_state.state }}°F'

- id: burner_plugs_off_2300
  alias: 'Safety: Nightly Burner Plug Shutoff'
  description: >
    Safety automation that turns off all burner plugs at 11 PM daily.
  mode: single
  trigger:
    - platform: time
      at: '23:00:00'
  action:
    - service: switch.turn_off
      target:
        entity_id:
          - switch.plug_basement_burner
          - switch.plug_mainfloor_burner
          - switch.plug_bedroom_burner
      continue_on_error: true
    - service: persistent_notification.create
      data:
        title: 'Safety: Burner Plugs'
        message: 'All burner plugs automatically turned off at 11 PM for safety.'
        notification_id: nightly_burner_shutoff
    - service: logbook.log
      data:
        name: Safety Automation
        message: Nightly burner plug shutoff completed
