# === HUSKERS core scripts (scene-free, entity IDs corrected) ===

huskers_snapshot_all:
  alias: 'Huskers: Snapshot lights'
  mode: single
  sequence:
    - service: scene.create
      data:
        scene_id: huskers_snapshot_before
        snapshot_entities:
          - light.theater_lights
          - light.front_porch_lights
          - light.garage_left
          - light.garage_center
          - light.garage_right
          - light.permanent_outdoor_lights

huskers_restore_snapshot:
  alias: 'Huskers: Restore snapshot'
  mode: single
  sequence:
    - variables:
        snap: >-
          {{ states.scene
             | map(attribute='entity_id')
             | select('equalto','scene.huskers_snapshot_before')
             | list
             | first }}
    - choose:
        - conditions:
            - condition: template
              value_template: '{{ snap is string and snap|length > 0 }}'
          sequence:
            - service: scene.turn_on
              data:
                entity_id: '{{ snap }}'
            - service: logbook.log
              data:
                name: Huskers Control
                message: 'Snapshot restored'
      default:
        - service: logbook.log
          data:
            name: Huskers Control
            message: 'No snapshot scene found — skipping restore'

huskers_led_gameday_start:
  alias: 'Huskers: LED Gameday Start'
  mode: single
  sequence:
    - service: script.huskers_snapshot_all
    # Exterior LEDs → try to use LED_Gametime effect if present; else set Huskers red
    - choose:
        - conditions:
            - condition: template
              value_template: >-
                {{ (state_attr('light.permanent_outdoor_lights','effect_list') or []) | list | select('equalto','LED_Gametime') | list | count > 0 }}
          sequence:
            - service: light.turn_on
              target:
                entity_id: light.permanent_outdoor_lights
              data:
                effect: LED_Gametime
      default:
        - service: light.turn_on
          target:
            entity_id: light.permanent_outdoor_lights
          data:
            brightness_pct: 100
            rgb_color: [208, 0, 0]
    # Theater to Huskers red at comfortable brightness
    - service: light.turn_on
      target:
        entity_id: light.theater_lights
      data:
        brightness_pct: 50
        rgb_color: [208, 0, 0]
    - service: logbook.log
      data:
        name: Huskers LEDs
        message: 'Gameday effect started'

huskers_led_stop:
  alias: 'Huskers: LED Stop'
  mode: single
  sequence:
    - service: script.huskers_restore_snapshot
    - service: logbook.log
      data:
        name: Huskers LEDs
        message: 'LED effects stopped / restored'

huskers_led_td_burst:
  alias: 'Huskers: LED TD Burst'
  # Policy: ignore overlapping bursts while one is running
  mode: single
  sequence:
    - variables:
        burst_s: 30
    - service: logbook.log
      data:
        name: Huskers TD
        message: 'Touchdown burst started ({{ burst_s }}s)'
    # Exterior: full-bright Huskers red for the burst
    - service: light.turn_on
      target:
        entity_id: light.permanent_outdoor_lights
      data:
        brightness_pct: 100
        rgb_color: [208, 0, 0]
    # Theater: flash to bright white for contrast, then restore red after the delay
    - service: light.turn_on
      target:
        entity_id: light.theater_lights
      data:
        brightness_pct: 50
        rgb_color: [255, 255, 255]
    - delay: '{{ burst_s }}'
    # Return to gameday baseline
    - service: script.huskers_led_gameday_start
    - service: logbook.log
      data:
        name: Huskers TD
        message: 'Burst complete → restored gameday'

huskers_exterior_show_start:
  alias: 'Huskers: Exterior Show Start'
  mode: single
  sequence:
    - choose:
        - conditions:
            - condition: template
              value_template: >-
                {{ (state_attr('light.permanent_outdoor_lights','effect_list') or []) | list | select('equalto','LED_Gametime') | list | count > 0 }}
          sequence:
            - service: light.turn_on
              target:
                entity_id: light.permanent_outdoor_lights
              data:
                effect: LED_Gametime
      default:
        - service: light.turn_on
          target:
            entity_id: light.permanent_outdoor_lights
          data:
            brightness_pct: 100
            rgb_color: [208, 0, 0]

huskers_exterior_show_stop:
  alias: 'Huskers: Exterior Show Stop'
  mode: single
  sequence:
    - service: script.huskers_restore_snapshot

huskers_theater_show_start:
  alias: 'Huskers: Theater Show Start'
  mode: single
  sequence:
    - service: light.turn_on
      target:
        entity_id: light.theater_lights
      data:
        brightness_pct: 50
        rgb_color: [208, 0, 0]

huskers_theater_show_stop:
  alias: 'Huskers: Theater Show Stop'
  mode: single
  sequence:
    - service: light.turn_on
      target:
        entity_id: light.theater_lights
      data:
        brightness_pct: 30
        rgb_color: [255, 247, 229]

huskers_cleanup_all:
  alias: 'Huskers: Stop/Restore All Huskers Effects'
  mode: single
  sequence:
    - service: script.huskers_led_stop
    - service: logbook.log
      data:
        name: Huskers Control
        message: 'Stop/Restore triggered'
