huskers_led_gameday_start:
  alias: Start Game-Day Effect
  mode: single
  sequence:
    - service: scene.create
      data:
        scene_id: huskers_outdoor_pre_gameday
        snapshot_entities:
          - light.permanent_outdoor_lights
    - service: light.turn_on
      target:
        entity_id: light.permanent_outdoor_lights
      data:
        effect: LED_Huskers
huskers_led_stop:
  alias: Stop Effect (Restore Previous)
  mode: single
  variables:
    snapshot_id: huskers_outdoor_pre_gameday
  sequence:
    - choose:
        - conditions:
            - condition: template
              value_template: "{{ states('scene.' ~ snapshot_id) != 'unknown' }}"
          sequence:
            - service: scene.turn_on
              data:
                entity_id: scene.{{ snapshot_id }}
                transition: 1
            - delay: 0.1
            - service: scene.delete
              data:
                entity_id: scene.{{ snapshot_id }}
      default:
        - service: light.turn_off
          target:
            entity_id: light.permanent_outdoor_lights
huskers_led_revert_monthly:
  alias: Revert to Monthly Effect
  mode: single
  sequence:
    - service: light.turn_on
      target:
        entity_id: light.permanent_outdoor_lights
      data:
        effect: Monthly
huskers_touchdown_burst:
  alias: 'Huskers: Touchdown Burst (Theater Alternating, Snapshot/Restore)'
  mode: restart
  variables:
    snapshot_id: huskers_theater_pre_burst
  sequence:
    - service: scene.create
      data:
        scene_id: huskers_theater_pre_burst
        snapshot_entities:
          - light.light_theater_left
          - light.light_theater_right
    - choose:
        - conditions:
            - condition: template
              value_template:
                "{{ states('light.light_theater_left') not in ['unavailable','unknown','none','']\
                \ and\n   states('light.light_theater_right') not in ['unavailable','unknown','none','']\
                \ }}\n"
          sequence: []
      default:
        - service: logbook.log
          data:
            name: "Huskers \u2013 Theater"
            message: Theater lights unavailable; skipping burst.
        - stop: Theater lights unavailable
    - variables:
        flashes: 6
        on_time: 0.35
        trans: 0.25
    - repeat:
        count: '{{ flashes }}'
        sequence:
          - service: light.turn_on
            target:
              entity_id: light.light_theater_left
            data:
              hs_color:
                - 355
                - 90
              brightness: 255
              transition: '{{ trans }}'
          - service: light.turn_on
            target:
              entity_id: light.light_theater_right
            data:
              hs_color:
                - 48
                - 12
              brightness: 255
              transition: '{{ trans }}'
          - delay: '{{ on_time }}'
          - service: light.turn_on
            target:
              entity_id: light.light_theater_left
            data:
              hs_color:
                - 48
                - 12
              brightness: 255
              transition: '{{ trans }}'
          - service: light.turn_on
            target:
              entity_id: light.light_theater_right
            data:
              hs_color:
                - 355
                - 90
              brightness: 255
              transition: '{{ trans }}'
          - delay: '{{ on_time }}'
    - delay: 0.2
    - choose:
        - conditions:
            - condition: template
              value_template: "{{ states('scene.' ~ snapshot_id) != 'unknown' }}"
          sequence:
            - service: scene.turn_on
              data:
                entity_id: scene.{{ snapshot_id }}
                transition: 1.0
            - service: scene.delete
              data:
                entity_id: scene.{{ snapshot_id }}
huskers_theater_show_start:
  alias: 'Huskers: Theater Show (Start)'
  mode: restart
  variables:
    snapshot_id: huskers_theater_show_restore
  sequence:
    - service: scene.create
      data:
        scene_id: huskers_theater_show_restore
        snapshot_entities:
          - light.light_theater_left
          - light.light_theater_right
    - choose:
        - conditions:
            - condition: template
              value_template:
                "{{ states('light.light_theater_left') not in ['unavailable','unknown','none','']\
                \ and\n   states('light.light_theater_right') not in ['unavailable','unknown','none','']\
                \ }}\n"
          sequence: []
      default:
        - service: logbook.log
          data:
            name: "Huskers \u2013 Theater"
            message: Theater lights unavailable; skipping show.
        - stop: Theater lights unavailable
    - service: input_boolean.turn_on
      target:
        entity_id: input_boolean.huskers_color_show
    - service: light.turn_on
      target:
        entity_id: light.light_theater_left
      data:
        hs_color:
          - 48
          - 12
        brightness: 255
    - service: light.turn_on
      target:
        entity_id: light.light_theater_right
      data:
        hs_color:
          - 355
          - 90
        brightness: 255
    - repeat:
        while:
          - condition: state
            entity_id: input_boolean.huskers_color_show
            state: 'on'
        sequence:
          - service: light.turn_on
            target:
              entity_id: light.light_theater_left
            data:
              hs_color:
                - 355
                - 90
              brightness: 255
              transition: 10
          - service: light.turn_on
            target:
              entity_id: light.light_theater_right
            data:
              hs_color:
                - 48
                - 12
              brightness: 255
              transition: 10
          - delay: 10
          - service: light.turn_on
            target:
              entity_id: light.light_theater_left
            data:
              hs_color:
                - 48
                - 12
              brightness: 255
              transition: 10
          - service: light.turn_on
            target:
              entity_id: light.light_theater_right
            data:
              hs_color:
                - 355
                - 90
              brightness: 255
              transition: 10
          - delay: 10
    - choose:
        - conditions:
            - condition: template
              value_template: "{{ states('scene.' ~ snapshot_id) != 'unknown' }}"
          sequence:
            - service: scene.turn_on
              data:
                entity_id: scene.{{ snapshot_id }}
            - service: scene.delete
              data:
                entity_id: scene.{{ snapshot_id }}
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.huskers_color_show
huskers_theater_show_stop:
  alias: 'Huskers: Theater Show (Stop)'
  mode: single
  sequence:
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.huskers_color_show
huskers_update_last_score_test:
  alias: Update Last Score (Test)
  mode: single
  sequence:
    - service: input_text.set_value
      target:
        entity_id: input_text.huskers_last_score
      data:
        value: Test Score Update
huskers_hail_varsity_show_start:
  alias: 'Huskers: Hail Varsity Show (Start)'
  mode: restart
  sequence:
    - service: logbook.log
      data:
        name: "Huskers \u2013 Hail Varsity"
        message: 'Start show: TODO implement sequence.'
huskers_hail_varsity_show_stop:
  alias: 'Huskers: Hail Varsity Show (Stop)'
  mode: restart
  sequence:
    - service: logbook.log
      data:
        name: "Huskers \u2013 Hail Varsity"
        message: 'Stop show: TODO implement sequence.'
huskers_test_our_score:
  alias: 'Huskers (Test): Our Score'
  mode: single
  sequence:
    - service: logbook.log
      data:
        name: "Huskers \u2013 Test"
        message: 'Our Score: TODO implement action.'
huskers_test_opponent_score:
  alias: 'Huskers (Test): Opponent Score'
  mode: single
  sequence:
    - service: logbook.log
      data:
        name: "Huskers \u2013 Test"
        message: 'Opponent Score: TODO implement action.'
util_fade_color:
  alias: 'Util: Fade to Color (2-step)'
  mode: parallel
  max: 10
  fields:
    light:
      description: Light entity_id
      example: light.garage_l
    h:
      description: "Hue (0\u2013360)"
      example: 355
      default: 355
    s:
      description: "Saturation (0\u2013100)"
      example: 90
      default: 90
    brightness:
      description: "Brightness (0\u2013255)"
      example: 255
      default: 255
    transition:
      description: Transition seconds
      example: 5
      default: 5
    predim_pct:
      description: "Pre-dim brightness percent (0\u2013100)"
      example: 10
      default: 10
    predim_hold:
      description: Pre-dim hold in seconds
      example: 1
      default: 1
  sequence:
    - service: light.turn_on
      data:
        entity_id: '{{ light }}'
        brightness_pct: '{{ predim_pct | int }}'
        transition: 0
    - delay: '{{ predim_hold }}'
    - service: light.turn_on
      data:
        entity_id: '{{ light }}'
        hs_color:
          - '{{ h | int }}'
          - '{{ s | int }}'
        brightness: '{{ brightness | int }}'
        transition: '{{ transition | int }}'
huskers_exterior_alternating_start:
  alias: "Huskers: Exterior Alternating \u2013 Start (Loop)"
  mode: restart
  sequence:
    - service: input_boolean.turn_on
      target:
        entity_id: input_boolean.huskers_exterior_color_show
    - repeat:
        while:
          - condition: state
            entity_id: input_boolean.huskers_exterior_color_show
            state: 'on'
        sequence:
          - service: script.util_fade_color
            data:
              light: light.light_front_left
              h: 355
              s: 90
              brightness: 255
              transition: 5
              predim_pct: 10
              predim_hold: 1
          - service: script.util_fade_color
            data:
              light: light.light_front_right
              h: 48
              s: 12
              brightness: 255
              transition: 5
              predim_pct: 10
              predim_hold: 1
          - service: script.util_fade_color
            data:
              light: light.garage_l
              h: 355
              s: 90
              brightness: 255
              transition: 5
              predim_pct: 10
              predim_hold: 1
          - service: script.util_fade_color
            data:
              light: light.garage_c
              h: 48
              s: 12
              brightness: 255
              transition: 5
              predim_pct: 10
              predim_hold: 1
          - service: script.util_fade_color
            data:
              light: light.garage_r
              h: 355
              s: 90
              brightness: 255
              transition: 5
              predim_pct: 10
              predim_hold: 1
          - delay: 5
          - service: script.util_fade_color
            data:
              light: light.light_front_left
              h: 48
              s: 12
              brightness: 255
              transition: 5
              predim_pct: 10
              predim_hold: 1
          - service: script.util_fade_color
            data:
              light: light.light_front_right
              h: 355
              s: 90
              brightness: 255
              transition: 5
              predim_pct: 10
              predim_hold: 1
          - service: script.util_fade_color
            data:
              light: light.garage_l
              h: 48
              s: 12
              brightness: 255
              transition: 5
              predim_pct: 10
              predim_hold: 1
          - service: script.util_fade_color
            data:
              light: light.garage_c
              h: 355
              s: 90
              brightness: 255
              transition: 5
              predim_pct: 10
              predim_hold: 1
          - service: script.util_fade_color
            data:
              light: light.garage_r
              h: 48
              s: 12
              brightness: 255
              transition: 5
              predim_pct: 10
              predim_hold: 1
          - delay: 5
huskers_exterior_alternating_inverted_start:
  alias: "Huskers: Exterior Alternating (Inverted) \u2013 Start (2-step fade)"
  mode: single
  sequence:
    - service: script.util_fade_color
      data:
        light: light.light_front_left
        h: 48
        s: 12
        brightness: 255
        transition: 5
        predim_pct: 10
        predim_hold: 1
    - service: script.util_fade_color
      data:
        light: light.light_front_right
        h: 355
        s: 90
        brightness: 255
        transition: 5
        predim_pct: 10
        predim_hold: 1
    - service: script.util_fade_color
      data:
        light: light.garage_l
        h: 48
        s: 12
        brightness: 255
        transition: 5
        predim_pct: 10
        predim_hold: 1
    - service: script.util_fade_color
      data:
        light: light.garage_c
        h: 355
        s: 90
        brightness: 255
        transition: 5
        predim_pct: 10
        predim_hold: 1
    - service: script.util_fade_color
      data:
        light: light.garage_r
        h: 48
        s: 12
        brightness: 255
        transition: 5
        predim_pct: 10
        predim_hold: 1
huskers_theater_scarlet_fade:
  alias: 'Huskers: Theater Scarlet Fade'
  mode: single
  sequence:
    - service: script.util_fade_color
      data:
        light: light.light_theater_left
        h: 355
        s: 90
        brightness: 255
        transition: 5
        predim_pct: 10
        predim_hold: 1
    - service: script.util_fade_color
      data:
        light: light.light_theater_right
        h: 355
        s: 90
        brightness: 255
        transition: 5
        predim_pct: 10
        predim_hold: 1
huskers_theater_cream_fade:
  alias: 'Huskers: Theater Cream Fade'
  mode: single
  sequence:
    - service: script.util_fade_color
      data:
        light: light.light_theater_left
        h: 48
        s: 12
        brightness: 255
        transition: 5
        predim_pct: 10
        predim_hold: 1
    - service: script.util_fade_color
      data:
        light: light.light_theater_right
        h: 48
        s: 12
        brightness: 255
        transition: 5
        predim_pct: 10
        predim_hold: 1
huskers_exterior_alternating_stop:
  alias: "Huskers: Exterior Alternating \u2013 Stop"
  mode: single
  sequence:
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.huskers_exterior_color_show
