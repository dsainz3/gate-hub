# scripts.yaml — Huskers Theater & LED Control (cleaned 2025-09-13)

# =========================================================
# CATEGORY: LED CONTROL
# =========================================================

huskers_led_gameday_start:
  alias: 'Huskers LED: Start Game-Day Effect'
  mode: single
  sequence:
    - service: light.turn_on
      target:
        entity_id: light.permanent_outdoor_lights
      data:
        effect: LED_Huskers

huskers_led_stop:
  alias: 'Huskers LED: Stop Effect (Off)'
  mode: single
  sequence:
    - service: light.turn_off
      target:
        entity_id: light.permanent_outdoor_lights

huskers_led_revert_monthly:
  alias: 'Huskers LED: Revert to Monthly Effect'
  mode: single
  sequence:
    - service: light.turn_on
      target:
        entity_id: light.permanent_outdoor_lights
      data:
        effect: Monthly

# =========================================================
# CATEGORY: TOUCHDOWN & BURST EFFECTS
# =========================================================

huskers_touchdown_burst:
  alias: 'Huskers: Touchdown Burst (Theater Alternating, Snapshot/Restore)'
  description: 'Fast alternating burst for touchdowns with restore'
  mode: restart
  sequence:
    # Snapshot current state of both theater lights
    - service: scene.create
      data:
        scene_id: huskers_theater_pre_burst
        snapshot_entities:
          - light.light_theater_left
          - light.light_theater_right

    # Burst variables
    - variables:
        flashes: 6 # total swaps (12 color hits)
        on_time: 0.35 # hold time for each color
        trans: 0.25 # smooth transition time

    # Alternate Scarlet <-> Cream
    - repeat:
        count: '{{ flashes }}'
        sequence:
          # Left red, right cream
          - service: light.turn_on
            target:
              entity_id: light.light_theater_left
            data:
              rgb_color: [208, 0, 0] # Nebraska Scarlet
              brightness: 255
              transition: '{{ trans }}'
          - service: light.turn_on
            target:
              entity_id: light.light_theater_right
            data:
              rgb_color: [255, 247, 229] # Nebraska Cream
              brightness: 255
              transition: '{{ trans }}'
          - delay: '{{ on_time }}'

          # Swap: left cream, right red
          - service: light.turn_on
            target:
              entity_id: light.light_theater_left
            data:
              rgb_color: [255, 247, 229] # Nebraska Cream
              brightness: 255
              transition: '{{ trans }}'
          - service: light.turn_on
            target:
              entity_id: light.light_theater_right
            data:
              rgb_color: [208, 0, 0] # Nebraska Scarlet
              brightness: 255
              transition: '{{ trans }}'
          - delay: '{{ on_time }}'

    # Settle and restore the snapshot
    - delay: '00:00:00.2'
    - service: scene.turn_on
      target:
        entity_id: scene.huskers_theater_pre_burst
      data:
        transition: 1.0

# =========================================================
# CATEGORY: THEATER GAME SHOW (PRIMARY — 5s cycle, 2s transitions)
# =========================================================

huskers_theater_game_show_start:
  alias: 'Huskers: Theater Game Show (Start)'
  description: 'Alternating Scarlet/Cream for theater lights only (5s cycles, 2s transitions)'
  mode: restart
  sequence:
    # Snapshot current theater state
    - service: scene.create
      data:
        scene_id: huskers_theater_game_before
        snapshot_entities:
          - light.light_theater_left
          - light.light_theater_right

    # Set theater show running flag
    - service: input_boolean.turn_on
      target:
        entity_id: input_boolean.huskers_theater_show_running

    # Log start of show
    - service: logbook.log
      data:
        name: Huskers Theater Game Show
        message: 'Started Huskers theater alternating show - Go Big Red!'

    # Start the alternating loop
    - service: script.turn_on
      target:
        entity_id: script.huskers_theater_game_show_loop

huskers_theater_game_show_loop:
  alias: 'Huskers: Theater Game Show (Loop)'
  description: 'Left (Scarlet→Cream), Right (Cream→Scarlet) — 5s cycles, 2s transitions'
  mode: restart
  sequence:
    - repeat:
        while:
          - condition: state
            entity_id: input_boolean.huskers_theater_show_running
            state: 'on'
        sequence:
          # Phase 1
          - parallel:
              - service: light.turn_on
                target:
                  entity_id: light.light_theater_left
                data:
                  rgb_color: [208, 0, 0] # Scarlet
                  brightness: 255
                  transition: 2
              - service: light.turn_on
                target:
                  entity_id: light.light_theater_right
                data:
                  rgb_color: [255, 247, 229] # Cream
                  brightness: 255
                  transition: 2
          - delay: '00:00:05'
          # Phase 2
          - parallel:
              - service: light.turn_on
                target:
                  entity_id: light.light_theater_left
                data:
                  rgb_color: [255, 247, 229] # Cream
                  brightness: 255
                  transition: 2
              - service: light.turn_on
                target:
                  entity_id: light.light_theater_right
                data:
                  rgb_color: [208, 0, 0] # Scarlet
                  brightness: 255
                  transition: 2
          - delay: '00:00:05'

huskers_theater_game_show_stop:
  alias: 'Huskers: Theater Game Show (Stop + Restore)'
  mode: single
  sequence:
    # Stop the show
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.huskers_theater_show_running

    # Restore previous state (if snapshot exists)
    - service: scene.turn_on
      target:
        entity_id: scene.huskers_theater_game_before
      data:
        transition: 1

    # Log completion
    - service: logbook.log
      data:
        name: Huskers Theater Game Show
        message: 'Stopped theater game show and restored previous lighting'

# =========================================================
# CATEGORY: LEGACY THEATER SHOW (PRESERVED — unique IDs)
# =========================================================
# Uses input_boolean.huskers_color_show, separate from primary flag.

huskers_theater_game_show_start_legacy:
  alias: 'Huskers: Theater Show (Start, Legacy)'
  description: 'Legacy 10s-ish pacing (2s transition + ~8s hold)'
  mode: restart
  sequence:
    - service: input_boolean.turn_on
      target:
        entity_id: input_boolean.huskers_color_show
    - service: script.turn_on
      target:
        entity_id: script.huskers_theater_game_show_loop_legacy

huskers_theater_game_show_loop_legacy:
  alias: 'Huskers: Theater Show (Loop, Legacy)'
  description: 'Alternating pattern with warmer cream tone'
  mode: restart
  sequence:
    - repeat:
        while:
          - condition: state
            entity_id: input_boolean.huskers_color_show
            state: 'on'
        sequence:
          # Phase 1
          - parallel:
              - service: light.turn_on
                target:
                  entity_id: light.light_theater_left
                data:
                  rgb_color: [208, 0, 0] # Scarlet
                  brightness: 255
                  transition: 2
              - service: light.turn_on
                target:
                  entity_id: light.light_theater_right
                data:
                  rgb_color: [255, 235, 205] # Warmer cream
                  brightness: 255
                  transition: 2
          - delay: '00:00:08' # ~10s total with transition

          # Phase 2
          - parallel:
              - service: light.turn_on
                target:
                  entity_id: light.light_theater_left
                data:
                  rgb_color: [255, 235, 205] # Warmer cream
                  brightness: 255
                  transition: 2
              - service: light.turn_on
                target:
                  entity_id: light.light_theater_right
                data:
                  rgb_color: [208, 0, 0] # Scarlet
                  brightness: 255
                  transition: 2
          - delay: '00:00:08' # ~10s total with transition

huskers_theater_show_stop_legacy:
  alias: 'Huskers: Theater Show (Stop, Legacy)'
  mode: single
  sequence:
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.huskers_color_show

# =========================================================
# CATEGORY: TEST SCRIPTS
# =========================================================

huskers_update_last_score_test:
  alias: 'Huskers Test: Update Last Score'
  mode: single
  sequence:
    - service: input_text.set_value
      target:
        entity_id: input_text.huskers_last_score
      data:
        value: 'Test Score Update'

huskers_hail_varsity_show_start:
  alias: 'Huskers: Hail Varsity Show (Start)'
  mode: restart
  sequence: []

huskers_hail_varsity_show_stop:
  alias: 'Huskers: Hail Varsity Show (Stop)'
  mode: restart
  sequence: []

huskers_test_our_score:
  alias: 'Huskers Test: Our Score'
  mode: single
  sequence: []

huskers_test_opponent_score:
  alias: 'Huskers Test: Opponent Score'
  mode: single
  sequence: []
