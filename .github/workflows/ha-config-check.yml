name: Home Assistant - Config Check

'on':
  pull_request:
    branches:
      - main
    paths:
      - '**/*.yaml'
      - '**/*.yml'
      - '**/*.json'
      - 'dashboards/**'
      - 'packages/**'
      - 'custom_components/**'
      - 'configuration.yaml'
      - 'themes.yaml'
      - '.github/workflows/ha-config-check.yml'
  push:
    branches:
      - main
    paths:
      - '**/*.yaml'
      - '**/*.yml'
      - '**/*.json'
      - 'dashboards/**'
      - 'packages/**'
      - 'custom_components/**'
      - 'configuration.yaml'
      - 'themes.yaml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-config:
    name: Validate HA configuration
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- Prepare CI: stub secrets & common includes so check_config can run ---
      - name: Prepare CI environment (stubs and diagnostics)
        shell: bash
        run: |
          set -euo pipefail
          cd "${{ github.workspace }}"

          # 1) Ensure a secrets.yaml exists
          if [ ! -f secrets.yaml ]; then
            echo "# auto-generated by CI" > secrets.yaml
          fi

          # 2) Collect all !secret keys (robust to quotes)
          mapfile -t SECRET_KEYS < <(
            grep -RhoE '!secret[[:space:]]+["'\'']?([A-Za-z0-9_-]+)["'\'']?' . \
            | sed -E 's/.*!secret[[:space:]]+["'\'']?([A-Za-z0-9_-]+).*/\1/' \
            | sort -u || true
          )

          # 3) Ensure each referenced secret exists in secrets.yaml
          for key in "${SECRET_KEYS[@]:-}"; do
            if ! grep -qE "^${key}:" secrets.yaml; then
              echo "${key}: placeholder" >> secrets.yaml
            fi
          done

          # 4) Provide defaults for common core secrets (in case theyâ€™re used)
          add_default() { grep -qE "^$1:" secrets.yaml || echo "$1: $2" >> secrets.yaml; }
          add_default home_latitude   "41.0000"
          add_default home_longitude  "-96.0000"
          add_default home_elevation  "0"
          add_default time_zone       "America/Chicago"

          # 5) Create common include files if referenced but missing
          for f in automations.yaml scripts.yaml customize.yaml; do
            if grep -Rql "$f" configuration.yaml 2>/dev/null || grep -Rql "$f" . 2>/dev/null; then
              [ -f "$f" ] || touch "$f"
            fi
          done

          echo "== CI prep complete =="
          echo "Secrets present:"
          wc -l secrets.yaml || true
          echo "---- secrets.yaml (first 50 lines) ----"
          sed -n '1,50p' secrets.yaml || true

      - name: Pull Home Assistant container
        run: docker pull ghcr.io/home-assistant/home-assistant:stable

      - name: Run hass --script check_config (with full output)
        env:
          TZ: America/Chicago
        run: |
          set -o pipefail
          docker run --rm \
            -e TZ \
            -v "${{ github.workspace }}":/config \
            ghcr.io/home-assistant/home-assistant:stable \
            python -m homeassistant --config /config --script check_config | tee check_config.out

      - name: Upload diagnostics
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ha-check-config-output
          path: check_config.out
